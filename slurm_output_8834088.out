============================================================================================== 
Warning! Mixing Conda and module environments may lead to corruption of the
user environment. 
We do not recommend users mixing those two environments unless absolutely
necessary. Note that 
SURF does not provide any support for Conda environment.
For more information, please refer to our software policy page:
https://servicedesk.surf.nl/wiki/display/WIKI/Software+policy+Snellius#SoftwarepolicySnellius-UseofAnacondaandMinicondaenvironmentsonSnellius 

Remember that many packages have already been installed on the system and can
be loaded using 
the 'module load <package__name>' command. If you are uncertain if a package is
already available 
on the system, please use 'module avail' or 'module spider' to search for it.
============================================================================================== 
[rank: 0] Seed set to 0
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
You are using a CUDA device ('NVIDIA A100-SXM4-40GB') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Namespace(txt_file='./assets/book_EN_grimms_fairy_tales.txt', model_type='gpt-mini', block_size=128, use_pretrained=False, abs_emb=False, train_batch_size=128, generate_batch_size=5, generate_every_n_steps=1000, learning_rate=0.0005, weight_decay=0.1, betas=(0.9, 0.95), num_epochs=5, clip_grad_norm=1.0, log_dir='./logs', seed=0, num_workers=8, progress_bar=False, use_flash_attn=False, precision='32', compile=True, pretrained_tokenizer=False, device='cuda')
data has 540241 characters, 87 unique.
True False
number of parameters: 10.73M
running on device cuda
Finding best initial lr:   0%|          | 0/100 [00:00<?, ?it/s]/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/torch/_inductor/compile_fx.py:167: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Probabilities after softmax: tensor([[0.0253, 0.0144, 0.0126, 0.0072, 0.0084, 0.0097, 0.0123, 0.0144, 0.0113,
         0.0064, 0.0064, 0.0126, 0.0096, 0.0143, 0.0087, 0.0104, 0.0153, 0.0173,
         0.0089, 0.0124, 0.0090, 0.0068, 0.0083, 0.0065, 0.0101, 0.0096, 0.0110,
         0.0133, 0.0097, 0.0091, 0.0093, 0.0133, 0.0165, 0.0130, 0.0119, 0.0196,
         0.0069, 0.0101, 0.0115, 0.0104, 0.0120, 0.0139, 0.0122, 0.0074, 0.0151,
         0.0094, 0.0052, 0.0092, 0.0082, 0.0116, 0.0059, 0.0177, 0.0091, 0.0075,
         0.0082, 0.0134, 0.0104, 0.0055, 0.0156, 0.0110, 0.0129, 0.0099, 0.0091,
         0.0064, 0.0136, 0.0152, 0.0215, 0.0148, 0.0094, 0.0160, 0.0199, 0.0166,
         0.0153, 0.0136, 0.0080, 0.0114, 0.0122, 0.0128, 0.0074, 0.0121, 0.0095,
         0.0136, 0.0201, 0.0058, 0.0151, 0.0059, 0.0094]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0425, 0.0242, 0.0211, 0.0000, 0.0000, 0.0000, 0.0207, 0.0242, 0.0000,
         0.0000, 0.0000, 0.0212, 0.0000, 0.0241, 0.0000, 0.0000, 0.0258, 0.0291,
         0.0000, 0.0208, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0223, 0.0000, 0.0000, 0.0000, 0.0223, 0.0278, 0.0219, 0.0199, 0.0330,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0202, 0.0233, 0.0204, 0.0000, 0.0254,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0195, 0.0000, 0.0298, 0.0000, 0.0000,
         0.0000, 0.0226, 0.0000, 0.0000, 0.0261, 0.0000, 0.0217, 0.0000, 0.0000,
         0.0000, 0.0229, 0.0255, 0.0360, 0.0249, 0.0000, 0.0268, 0.0335, 0.0278,
         0.0257, 0.0229, 0.0000, 0.0000, 0.0205, 0.0215, 0.0000, 0.0202, 0.0000,
         0.0228, 0.0338, 0.0000, 0.0254, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0140, 0.0183, 0.0099, 0.0072, 0.0066, 0.0076, 0.0172, 0.0055, 0.0058,
         0.0148, 0.0133, 0.0150, 0.0113, 0.0153, 0.0067, 0.0067, 0.0091, 0.0077,
         0.0108, 0.0184, 0.0037, 0.0119, 0.0114, 0.0095, 0.0064, 0.0094, 0.0108,
         0.0109, 0.0141, 0.0065, 0.0084, 0.0130, 0.0166, 0.0149, 0.0111, 0.0112,
         0.0113, 0.0115, 0.0089, 0.0335, 0.0109, 0.0166, 0.0047, 0.0087, 0.0121,
         0.0147, 0.0099, 0.0060, 0.0110, 0.0078, 0.0104, 0.0158, 0.0120, 0.0099,
         0.0058, 0.0157, 0.0083, 0.0044, 0.0111, 0.0154, 0.0073, 0.0108, 0.0127,
         0.0079, 0.0106, 0.0097, 0.0230, 0.0083, 0.0122, 0.0065, 0.0213, 0.0078,
         0.0109, 0.0167, 0.0113, 0.0050, 0.0158, 0.0244, 0.0099, 0.0150, 0.0099,
         0.0150, 0.0186, 0.0093, 0.0128, 0.0095, 0.0104]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0234, 0.0305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0287, 0.0000, 0.0000,
         0.0246, 0.0221, 0.0250, 0.0188, 0.0255, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0307, 0.0000, 0.0199, 0.0191, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0235, 0.0000, 0.0000, 0.0217, 0.0277, 0.0249, 0.0186, 0.0186,
         0.0189, 0.0192, 0.0000, 0.0560, 0.0000, 0.0277, 0.0000, 0.0000, 0.0203,
         0.0245, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0264, 0.0200, 0.0000,
         0.0000, 0.0262, 0.0000, 0.0000, 0.0000, 0.0256, 0.0000, 0.0000, 0.0211,
         0.0000, 0.0000, 0.0000, 0.0385, 0.0000, 0.0203, 0.0000, 0.0356, 0.0000,
         0.0000, 0.0278, 0.0189, 0.0000, 0.0264, 0.0406, 0.0000, 0.0251, 0.0000,
         0.0251, 0.0310, 0.0000, 0.0214, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0258, 0.0072, 0.0099, 0.0128, 0.0145, 0.0097, 0.0129, 0.0094, 0.0099,
         0.0102, 0.0187, 0.0106, 0.0137, 0.0061, 0.0119, 0.0092, 0.0078, 0.0106,
         0.0100, 0.0067, 0.0103, 0.0185, 0.0092, 0.0118, 0.0163, 0.0068, 0.0062,
         0.0037, 0.0058, 0.0122, 0.0088, 0.0124, 0.0053, 0.0232, 0.0145, 0.0155,
         0.0101, 0.0249, 0.0047, 0.0161, 0.0170, 0.0072, 0.0198, 0.0131, 0.0159,
         0.0156, 0.0039, 0.0077, 0.0067, 0.0122, 0.0097, 0.0068, 0.0047, 0.0162,
         0.0081, 0.0057, 0.0087, 0.0136, 0.0151, 0.0044, 0.0118, 0.0083, 0.0078,
         0.0128, 0.0111, 0.0237, 0.0135, 0.0195, 0.0154, 0.0170, 0.0073, 0.0096,
         0.0073, 0.0098, 0.0075, 0.0117, 0.0151, 0.0208, 0.0063, 0.0185, 0.0110,
         0.0089, 0.0083, 0.0116, 0.0104, 0.0101, 0.0085]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0434, 0.0000, 0.0000, 0.0216, 0.0244, 0.0000, 0.0217, 0.0000, 0.0000,
         0.0000, 0.0315, 0.0000, 0.0231, 0.0000, 0.0200, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0312, 0.0000, 0.0199, 0.0275, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0206, 0.0000, 0.0209, 0.0000, 0.0390, 0.0244, 0.0261,
         0.0000, 0.0418, 0.0000, 0.0272, 0.0286, 0.0000, 0.0333, 0.0221, 0.0268,
         0.0263, 0.0000, 0.0000, 0.0000, 0.0205, 0.0000, 0.0000, 0.0000, 0.0272,
         0.0000, 0.0000, 0.0000, 0.0230, 0.0255, 0.0000, 0.0199, 0.0000, 0.0000,
         0.0216, 0.0000, 0.0399, 0.0227, 0.0329, 0.0259, 0.0285, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0196, 0.0255, 0.0350, 0.0000, 0.0312, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0124, 0.0170, 0.0102, 0.0109, 0.0201, 0.0177, 0.0120, 0.0076, 0.0066,
         0.0080, 0.0094, 0.0106, 0.0077, 0.0072, 0.0091, 0.0075, 0.0143, 0.0302,
         0.0112, 0.0127, 0.0129, 0.0121, 0.0078, 0.0100, 0.0061, 0.0213, 0.0176,
         0.0075, 0.0078, 0.0126, 0.0059, 0.0210, 0.0068, 0.0145, 0.0108, 0.0104,
         0.0090, 0.0130, 0.0086, 0.0078, 0.0203, 0.0102, 0.0146, 0.0091, 0.0064,
         0.0114, 0.0079, 0.0131, 0.0139, 0.0192, 0.0140, 0.0077, 0.0102, 0.0108,
         0.0096, 0.0138, 0.0078, 0.0104, 0.0124, 0.0101, 0.0161, 0.0150, 0.0126,
         0.0078, 0.0135, 0.0107, 0.0060, 0.0104, 0.0181, 0.0091, 0.0072, 0.0174,
         0.0164, 0.0056, 0.0120, 0.0069, 0.0114, 0.0058, 0.0125, 0.0174, 0.0062,
         0.0069, 0.0185, 0.0071, 0.0193, 0.0057, 0.0051]], device='cuda:0')
Sum of probabilities per row: tensor([1.0000], device='cuda:0')
Probabilities after top-p: tensor([[0.0208, 0.0285, 0.0000, 0.0000, 0.0339, 0.0297, 0.0202, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0240, 0.0509,
         0.0000, 0.0213, 0.0217, 0.0204, 0.0000, 0.0000, 0.0000, 0.0359, 0.0296,
         0.0000, 0.0000, 0.0212, 0.0000, 0.0354, 0.0000, 0.0245, 0.0000, 0.0000,
         0.0000, 0.0219, 0.0000, 0.0000, 0.0342, 0.0000, 0.0245, 0.0000, 0.0000,
         0.0192, 0.0000, 0.0220, 0.0234, 0.0324, 0.0236, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0232, 0.0000, 0.0000, 0.0208, 0.0000, 0.0271, 0.0252, 0.0213,
         0.0000, 0.0227, 0.0000, 0.0000, 0.0000, 0.0305, 0.0000, 0.0000, 0.0293,
         0.0275, 0.0000, 0.0201, 0.0000, 0.0192, 0.0000, 0.0210, 0.0293, 0.0000,
         0.0000, 0.0312, 0.0000, 0.0325, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0202, 0.0152, 0.0097, 0.0050, 0.0061, 0.0132, 0.0137, 0.0067, 0.0116,
         0.0061, 0.0117, 0.0156, 0.0097, 0.0144, 0.0079, 0.0069, 0.0158, 0.0131,
         0.0090, 0.0117, 0.0080, 0.0064, 0.0115, 0.0119, 0.0062, 0.0081, 0.0138,
         0.0101, 0.0120, 0.0101, 0.0093, 0.0103, 0.0048, 0.0176, 0.0225, 0.0182,
         0.0061, 0.0174, 0.0081, 0.0199, 0.0124, 0.0132, 0.0139, 0.0095, 0.0114,
         0.0165, 0.0108, 0.0056, 0.0125, 0.0131, 0.0104, 0.0140, 0.0077, 0.0096,
         0.0083, 0.0094, 0.0080, 0.0043, 0.0078, 0.0126, 0.0162, 0.0077, 0.0076,
         0.0075, 0.0180, 0.0163, 0.0165, 0.0098, 0.0108, 0.0127, 0.0141, 0.0198,
         0.0108, 0.0131, 0.0128, 0.0093, 0.0154, 0.0171, 0.0107, 0.0086, 0.0080,
         0.0139, 0.0150, 0.0061, 0.0142, 0.0075, 0.0139]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0341, 0.0258, 0.0000, 0.0000, 0.0000, 0.0223, 0.0232, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0264, 0.0000, 0.0243, 0.0000, 0.0000, 0.0267, 0.0221,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0201, 0.0000, 0.0000, 0.0233,
         0.0000, 0.0203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0297, 0.0380, 0.0308,
         0.0000, 0.0293, 0.0000, 0.0337, 0.0209, 0.0223, 0.0234, 0.0000, 0.0000,
         0.0278, 0.0000, 0.0000, 0.0212, 0.0221, 0.0000, 0.0237, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0212, 0.0274, 0.0000, 0.0000,
         0.0000, 0.0304, 0.0276, 0.0278, 0.0000, 0.0000, 0.0214, 0.0239, 0.0335,
         0.0000, 0.0222, 0.0217, 0.0000, 0.0260, 0.0289, 0.0000, 0.0000, 0.0000,
         0.0235, 0.0253, 0.0000, 0.0241, 0.0000, 0.0234]], device='cuda:0')
Probabilities after softmax: tensor([[0.0198, 0.0084, 0.0166, 0.0076, 0.0106, 0.0108, 0.0166, 0.0072, 0.0112,
         0.0127, 0.0112, 0.0130, 0.0096, 0.0076, 0.0125, 0.0040, 0.0071, 0.0207,
         0.0188, 0.0071, 0.0094, 0.0072, 0.0081, 0.0104, 0.0051, 0.0114, 0.0129,
         0.0087, 0.0079, 0.0064, 0.0081, 0.0088, 0.0070, 0.0225, 0.0075, 0.0111,
         0.0095, 0.0188, 0.0078, 0.0323, 0.0153, 0.0091, 0.0043, 0.0099, 0.0086,
         0.0094, 0.0087, 0.0110, 0.0128, 0.0149, 0.0223, 0.0116, 0.0151, 0.0153,
         0.0102, 0.0126, 0.0108, 0.0050, 0.0180, 0.0062, 0.0127, 0.0119, 0.0064,
         0.0093, 0.0130, 0.0140, 0.0095, 0.0138, 0.0197, 0.0069, 0.0093, 0.0138,
         0.0155, 0.0106, 0.0104, 0.0151, 0.0119, 0.0149, 0.0100, 0.0105, 0.0098,
         0.0148, 0.0098, 0.0134, 0.0060, 0.0123, 0.0099]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0331, 0.0000, 0.0278, 0.0000, 0.0000, 0.0000, 0.0278, 0.0000, 0.0188,
         0.0212, 0.0188, 0.0218, 0.0000, 0.0000, 0.0209, 0.0000, 0.0000, 0.0347,
         0.0316, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0191, 0.0215,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0376, 0.0000, 0.0186,
         0.0000, 0.0315, 0.0000, 0.0541, 0.0256, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0215, 0.0249, 0.0374, 0.0194, 0.0254, 0.0257,
         0.0000, 0.0212, 0.0000, 0.0000, 0.0302, 0.0000, 0.0213, 0.0200, 0.0000,
         0.0000, 0.0218, 0.0235, 0.0000, 0.0231, 0.0329, 0.0000, 0.0000, 0.0232,
         0.0260, 0.0000, 0.0000, 0.0253, 0.0199, 0.0250, 0.0000, 0.0000, 0.0000,
         0.0248, 0.0000, 0.0224, 0.0000, 0.0206, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0174, 0.0113, 0.0187, 0.0109, 0.0104, 0.0117, 0.0145, 0.0070, 0.0113,
         0.0063, 0.0178, 0.0095, 0.0105, 0.0133, 0.0093, 0.0101, 0.0094, 0.0128,
         0.0044, 0.0075, 0.0086, 0.0112, 0.0147, 0.0098, 0.0069, 0.0226, 0.0147,
         0.0061, 0.0091, 0.0133, 0.0079, 0.0072, 0.0074, 0.0173, 0.0128, 0.0146,
         0.0080, 0.0175, 0.0038, 0.0275, 0.0293, 0.0134, 0.0091, 0.0065, 0.0095,
         0.0162, 0.0085, 0.0117, 0.0092, 0.0070, 0.0146, 0.0071, 0.0099, 0.0168,
         0.0057, 0.0149, 0.0093, 0.0061, 0.0131, 0.0102, 0.0162, 0.0122, 0.0074,
         0.0115, 0.0088, 0.0120, 0.0086, 0.0125, 0.0131, 0.0098, 0.0065, 0.0115,
         0.0094, 0.0126, 0.0086, 0.0103, 0.0177, 0.0107, 0.0108, 0.0132, 0.0120,
         0.0136, 0.0130, 0.0074, 0.0153, 0.0054, 0.0164]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0293, 0.0000, 0.0314, 0.0000, 0.0000, 0.0196, 0.0244, 0.0000, 0.0000,
         0.0000, 0.0299, 0.0000, 0.0000, 0.0224, 0.0000, 0.0000, 0.0000, 0.0215,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0248, 0.0000, 0.0000, 0.0380, 0.0247,
         0.0000, 0.0000, 0.0223, 0.0000, 0.0000, 0.0000, 0.0292, 0.0216, 0.0245,
         0.0000, 0.0294, 0.0000, 0.0462, 0.0494, 0.0226, 0.0000, 0.0000, 0.0000,
         0.0272, 0.0000, 0.0197, 0.0000, 0.0000, 0.0246, 0.0000, 0.0000, 0.0283,
         0.0000, 0.0252, 0.0000, 0.0000, 0.0220, 0.0000, 0.0273, 0.0205, 0.0000,
         0.0194, 0.0000, 0.0202, 0.0000, 0.0211, 0.0221, 0.0000, 0.0000, 0.0194,
         0.0000, 0.0213, 0.0000, 0.0000, 0.0298, 0.0000, 0.0000, 0.0222, 0.0202,
         0.0229, 0.0219, 0.0000, 0.0257, 0.0000, 0.0277]], device='cuda:0')
Probabilities after softmax: tensor([[0.0117, 0.0075, 0.0133, 0.0086, 0.0244, 0.0132, 0.0154, 0.0095, 0.0065,
         0.0073, 0.0221, 0.0298, 0.0071, 0.0138, 0.0064, 0.0043, 0.0106, 0.0132,
         0.0087, 0.0082, 0.0057, 0.0117, 0.0056, 0.0074, 0.0067, 0.0103, 0.0137,
         0.0046, 0.0174, 0.0078, 0.0107, 0.0182, 0.0078, 0.0070, 0.0125, 0.0134,
         0.0129, 0.0205, 0.0093, 0.0219, 0.0164, 0.0125, 0.0082, 0.0071, 0.0141,
         0.0127, 0.0131, 0.0059, 0.0101, 0.0172, 0.0073, 0.0161, 0.0094, 0.0129,
         0.0099, 0.0129, 0.0088, 0.0126, 0.0118, 0.0045, 0.0135, 0.0100, 0.0078,
         0.0076, 0.0090, 0.0132, 0.0113, 0.0067, 0.0142, 0.0167, 0.0070, 0.0090,
         0.0095, 0.0112, 0.0099, 0.0056, 0.0146, 0.0209, 0.0091, 0.0069, 0.0112,
         0.0080, 0.0143, 0.0149, 0.0193, 0.0065, 0.0222]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0000, 0.0000, 0.0224, 0.0000, 0.0413, 0.0224, 0.0260, 0.0000, 0.0000,
         0.0000, 0.0373, 0.0504, 0.0000, 0.0233, 0.0000, 0.0000, 0.0000, 0.0222,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0232,
         0.0000, 0.0295, 0.0000, 0.0000, 0.0307, 0.0000, 0.0000, 0.0211, 0.0227,
         0.0219, 0.0346, 0.0000, 0.0370, 0.0278, 0.0211, 0.0000, 0.0000, 0.0238,
         0.0214, 0.0221, 0.0000, 0.0000, 0.0291, 0.0000, 0.0272, 0.0000, 0.0218,
         0.0000, 0.0219, 0.0000, 0.0212, 0.0200, 0.0000, 0.0228, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0223, 0.0000, 0.0000, 0.0240, 0.0282, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0247, 0.0353, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0241, 0.0252, 0.0327, 0.0000, 0.0375]], device='cuda:0')
Probabilities after softmax: tensor([[0.0247, 0.0179, 0.0154, 0.0033, 0.0091, 0.0121, 0.0101, 0.0063, 0.0113,
         0.0103, 0.0141, 0.0167, 0.0118, 0.0130, 0.0073, 0.0038, 0.0114, 0.0107,
         0.0096, 0.0199, 0.0125, 0.0100, 0.0077, 0.0152, 0.0073, 0.0092, 0.0105,
         0.0141, 0.0074, 0.0068, 0.0070, 0.0115, 0.0073, 0.0149, 0.0214, 0.0126,
         0.0084, 0.0105, 0.0124, 0.0138, 0.0144, 0.0065, 0.0115, 0.0103, 0.0127,
         0.0121, 0.0071, 0.0121, 0.0078, 0.0097, 0.0111, 0.0134, 0.0061, 0.0132,
         0.0140, 0.0094, 0.0086, 0.0105, 0.0122, 0.0102, 0.0116, 0.0073, 0.0070,
         0.0068, 0.0194, 0.0152, 0.0137, 0.0113, 0.0091, 0.0099, 0.0114, 0.0096,
         0.0131, 0.0140, 0.0107, 0.0111, 0.0179, 0.0148, 0.0064, 0.0143, 0.0129,
         0.0115, 0.0131, 0.0086, 0.0156, 0.0101, 0.0213]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0413, 0.0299, 0.0258, 0.0000, 0.0000, 0.0202, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0236, 0.0280, 0.0198, 0.0217, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0333, 0.0209, 0.0000, 0.0000, 0.0255, 0.0000, 0.0000, 0.0000,
         0.0236, 0.0000, 0.0000, 0.0000, 0.0192, 0.0000, 0.0249, 0.0358, 0.0211,
         0.0000, 0.0000, 0.0207, 0.0230, 0.0241, 0.0000, 0.0192, 0.0000, 0.0213,
         0.0202, 0.0000, 0.0203, 0.0000, 0.0000, 0.0000, 0.0224, 0.0000, 0.0220,
         0.0234, 0.0000, 0.0000, 0.0000, 0.0203, 0.0000, 0.0194, 0.0000, 0.0000,
         0.0000, 0.0325, 0.0254, 0.0229, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0219, 0.0234, 0.0000, 0.0000, 0.0299, 0.0248, 0.0000, 0.0239, 0.0215,
         0.0192, 0.0219, 0.0000, 0.0260, 0.0000, 0.0356]], device='cuda:0')
Probabilities after softmax: tensor([[0.0166, 0.0114, 0.0119, 0.0114, 0.0115, 0.0107, 0.0118, 0.0090, 0.0125,
         0.0050, 0.0124, 0.0199, 0.0102, 0.0095, 0.0042, 0.0042, 0.0068, 0.0263,
         0.0068, 0.0184, 0.0077, 0.0105, 0.0099, 0.0129, 0.0087, 0.0078, 0.0078,
         0.0068, 0.0104, 0.0110, 0.0151, 0.0196, 0.0030, 0.0107, 0.0111, 0.0147,
         0.0094, 0.0288, 0.0067, 0.0080, 0.0278, 0.0106, 0.0087, 0.0085, 0.0087,
         0.0141, 0.0100, 0.0051, 0.0085, 0.0101, 0.0066, 0.0136, 0.0089, 0.0166,
         0.0055, 0.0084, 0.0065, 0.0088, 0.0196, 0.0066, 0.0081, 0.0145, 0.0192,
         0.0083, 0.0180, 0.0143, 0.0116, 0.0090, 0.0129, 0.0064, 0.0141, 0.0150,
         0.0121, 0.0148, 0.0159, 0.0096, 0.0202, 0.0181, 0.0062, 0.0133, 0.0077,
         0.0079, 0.0120, 0.0072, 0.0239, 0.0044, 0.0111]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0279, 0.0190, 0.0200, 0.0191, 0.0193, 0.0000, 0.0198, 0.0000, 0.0209,
         0.0000, 0.0208, 0.0333, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0440,
         0.0000, 0.0309, 0.0000, 0.0000, 0.0000, 0.0217, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0253, 0.0329, 0.0000, 0.0000, 0.0000, 0.0247,
         0.0000, 0.0482, 0.0000, 0.0000, 0.0465, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0236, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0229, 0.0000, 0.0278,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0328, 0.0000, 0.0000, 0.0244, 0.0321,
         0.0000, 0.0302, 0.0240, 0.0195, 0.0000, 0.0216, 0.0000, 0.0236, 0.0251,
         0.0202, 0.0249, 0.0266, 0.0000, 0.0339, 0.0303, 0.0000, 0.0223, 0.0000,
         0.0000, 0.0200, 0.0000, 0.0401, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0116, 0.0064, 0.0163, 0.0060, 0.0141, 0.0134, 0.0165, 0.0124, 0.0120,
         0.0085, 0.0092, 0.0092, 0.0180, 0.0108, 0.0088, 0.0044, 0.0094, 0.0096,
         0.0085, 0.0143, 0.0064, 0.0122, 0.0084, 0.0074, 0.0045, 0.0094, 0.0089,
         0.0112, 0.0118, 0.0167, 0.0108, 0.0251, 0.0127, 0.0129, 0.0140, 0.0084,
         0.0179, 0.0130, 0.0117, 0.0101, 0.0099, 0.0183, 0.0149, 0.0121, 0.0086,
         0.0138, 0.0060, 0.0072, 0.0149, 0.0067, 0.0148, 0.0180, 0.0065, 0.0142,
         0.0086, 0.0103, 0.0057, 0.0135, 0.0126, 0.0140, 0.0038, 0.0083, 0.0117,
         0.0106, 0.0090, 0.0076, 0.0136, 0.0107, 0.0145, 0.0057, 0.0101, 0.0272,
         0.0090, 0.0144, 0.0062, 0.0102, 0.0133, 0.0160, 0.0108, 0.0178, 0.0168,
         0.0095, 0.0134, 0.0092, 0.0203, 0.0038, 0.0130]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0000, 0.0000, 0.0274, 0.0000, 0.0236, 0.0226, 0.0277, 0.0208, 0.0201,
         0.0000, 0.0000, 0.0000, 0.0303, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0240, 0.0000, 0.0206, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0199, 0.0281, 0.0000, 0.0422, 0.0214, 0.0218, 0.0235, 0.0000,
         0.0300, 0.0218, 0.0000, 0.0000, 0.0000, 0.0307, 0.0250, 0.0203, 0.0000,
         0.0232, 0.0000, 0.0000, 0.0250, 0.0000, 0.0250, 0.0302, 0.0000, 0.0239,
         0.0000, 0.0000, 0.0000, 0.0228, 0.0212, 0.0236, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0229, 0.0000, 0.0244, 0.0000, 0.0000, 0.0457,
         0.0000, 0.0242, 0.0000, 0.0000, 0.0224, 0.0269, 0.0000, 0.0299, 0.0283,
         0.0000, 0.0225, 0.0000, 0.0341, 0.0000, 0.0219]], device='cuda:0')
Probabilities after softmax: tensor([[0.0199, 0.0077, 0.0173, 0.0109, 0.0113, 0.0127, 0.0117, 0.0144, 0.0101,
         0.0134, 0.0086, 0.0149, 0.0144, 0.0144, 0.0093, 0.0075, 0.0068, 0.0114,
         0.0109, 0.0105, 0.0067, 0.0100, 0.0109, 0.0075, 0.0184, 0.0120, 0.0092,
         0.0076, 0.0113, 0.0189, 0.0170, 0.0056, 0.0102, 0.0147, 0.0088, 0.0120,
         0.0105, 0.0219, 0.0066, 0.0150, 0.0142, 0.0108, 0.0081, 0.0133, 0.0115,
         0.0094, 0.0102, 0.0045, 0.0081, 0.0194, 0.0096, 0.0065, 0.0078, 0.0081,
         0.0165, 0.0092, 0.0123, 0.0106, 0.0169, 0.0091, 0.0151, 0.0083, 0.0122,
         0.0075, 0.0120, 0.0144, 0.0142, 0.0061, 0.0122, 0.0095, 0.0070, 0.0152,
         0.0120, 0.0153, 0.0141, 0.0052, 0.0108, 0.0094, 0.0141, 0.0130, 0.0065,
         0.0217, 0.0081, 0.0104, 0.0099, 0.0056, 0.0215]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0334, 0.0000, 0.0290, 0.0000, 0.0190, 0.0213, 0.0195, 0.0242, 0.0000,
         0.0225, 0.0000, 0.0249, 0.0242, 0.0241, 0.0000, 0.0000, 0.0000, 0.0191,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0309, 0.0202, 0.0000,
         0.0000, 0.0000, 0.0317, 0.0286, 0.0000, 0.0000, 0.0246, 0.0000, 0.0201,
         0.0000, 0.0367, 0.0000, 0.0252, 0.0238, 0.0000, 0.0000, 0.0223, 0.0192,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0325, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0276, 0.0000, 0.0206, 0.0000, 0.0283, 0.0000, 0.0253, 0.0000, 0.0204,
         0.0000, 0.0201, 0.0241, 0.0237, 0.0000, 0.0204, 0.0000, 0.0000, 0.0255,
         0.0202, 0.0256, 0.0237, 0.0000, 0.0000, 0.0000, 0.0237, 0.0218, 0.0000,
         0.0363, 0.0000, 0.0000, 0.0000, 0.0000, 0.0360]], device='cuda:0')
Probabilities after softmax: tensor([[0.0161, 0.0175, 0.0144, 0.0039, 0.0067, 0.0129, 0.0099, 0.0056, 0.0071,
         0.0110, 0.0183, 0.0157, 0.0135, 0.0152, 0.0099, 0.0065, 0.0154, 0.0105,
         0.0124, 0.0117, 0.0087, 0.0106, 0.0061, 0.0139, 0.0079, 0.0119, 0.0089,
         0.0105, 0.0077, 0.0041, 0.0063, 0.0097, 0.0118, 0.0101, 0.0246, 0.0122,
         0.0104, 0.0091, 0.0190, 0.0136, 0.0129, 0.0107, 0.0104, 0.0088, 0.0117,
         0.0123, 0.0090, 0.0102, 0.0085, 0.0075, 0.0186, 0.0089, 0.0085, 0.0117,
         0.0153, 0.0086, 0.0113, 0.0079, 0.0101, 0.0083, 0.0119, 0.0063, 0.0087,
         0.0077, 0.0186, 0.0125, 0.0150, 0.0153, 0.0076, 0.0087, 0.0142, 0.0135,
         0.0151, 0.0106, 0.0105, 0.0088, 0.0233, 0.0150, 0.0109, 0.0115, 0.0136,
         0.0121, 0.0145, 0.0095, 0.0110, 0.0085, 0.0224]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0272, 0.0295, 0.0244, 0.0000, 0.0000, 0.0218, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0309, 0.0266, 0.0229, 0.0257, 0.0000, 0.0000, 0.0259, 0.0000,
         0.0209, 0.0198, 0.0000, 0.0000, 0.0000, 0.0234, 0.0000, 0.0201, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0200, 0.0000, 0.0415, 0.0206,
         0.0000, 0.0000, 0.0320, 0.0229, 0.0217, 0.0000, 0.0000, 0.0000, 0.0197,
         0.0208, 0.0000, 0.0000, 0.0000, 0.0000, 0.0314, 0.0000, 0.0000, 0.0198,
         0.0259, 0.0000, 0.0192, 0.0000, 0.0000, 0.0000, 0.0201, 0.0000, 0.0000,
         0.0000, 0.0313, 0.0211, 0.0253, 0.0259, 0.0000, 0.0000, 0.0239, 0.0228,
         0.0255, 0.0000, 0.0000, 0.0000, 0.0394, 0.0254, 0.0000, 0.0193, 0.0229,
         0.0204, 0.0245, 0.0000, 0.0000, 0.0000, 0.0378]], device='cuda:0')
Probabilities after softmax: tensor([[0.0186, 0.0157, 0.0096, 0.0132, 0.0304, 0.0146, 0.0111, 0.0103, 0.0095,
         0.0071, 0.0110, 0.0128, 0.0109, 0.0087, 0.0053, 0.0059, 0.0117, 0.0079,
         0.0108, 0.0119, 0.0078, 0.0083, 0.0147, 0.0099, 0.0083, 0.0062, 0.0093,
         0.0122, 0.0201, 0.0068, 0.0109, 0.0239, 0.0068, 0.0093, 0.0181, 0.0101,
         0.0124, 0.0176, 0.0135, 0.0069, 0.0058, 0.0100, 0.0154, 0.0107, 0.0212,
         0.0111, 0.0111, 0.0156, 0.0077, 0.0100, 0.0073, 0.0201, 0.0085, 0.0084,
         0.0106, 0.0103, 0.0068, 0.0101, 0.0070, 0.0132, 0.0086, 0.0114, 0.0119,
         0.0086, 0.0152, 0.0106, 0.0153, 0.0071, 0.0081, 0.0099, 0.0101, 0.0137,
         0.0088, 0.0147, 0.0060, 0.0099, 0.0138, 0.0138, 0.0095, 0.0103, 0.0098,
         0.0147, 0.0142, 0.0172, 0.0189, 0.0073, 0.0096]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0311, 0.0262, 0.0000, 0.0220, 0.0507, 0.0244, 0.0185, 0.0000, 0.0000,
         0.0000, 0.0183, 0.0214, 0.0182, 0.0000, 0.0000, 0.0000, 0.0195, 0.0000,
         0.0181, 0.0199, 0.0000, 0.0000, 0.0245, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0204, 0.0336, 0.0000, 0.0182, 0.0399, 0.0000, 0.0000, 0.0303, 0.0000,
         0.0208, 0.0294, 0.0226, 0.0000, 0.0000, 0.0000, 0.0258, 0.0000, 0.0354,
         0.0186, 0.0185, 0.0261, 0.0000, 0.0000, 0.0000, 0.0336, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0221, 0.0000, 0.0191, 0.0198,
         0.0000, 0.0253, 0.0000, 0.0256, 0.0000, 0.0000, 0.0000, 0.0000, 0.0229,
         0.0000, 0.0245, 0.0000, 0.0000, 0.0230, 0.0231, 0.0000, 0.0000, 0.0000,
         0.0245, 0.0237, 0.0288, 0.0316, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0138, 0.0064, 0.0087, 0.0079, 0.0088, 0.0211, 0.0150, 0.0075, 0.0046,
         0.0057, 0.0189, 0.0102, 0.0153, 0.0083, 0.0066, 0.0084, 0.0099, 0.0238,
         0.0086, 0.0098, 0.0064, 0.0137, 0.0073, 0.0091, 0.0089, 0.0060, 0.0107,
         0.0129, 0.0093, 0.0132, 0.0148, 0.0110, 0.0169, 0.0163, 0.0107, 0.0056,
         0.0103, 0.0163, 0.0055, 0.0184, 0.0135, 0.0145, 0.0207, 0.0198, 0.0134,
         0.0136, 0.0071, 0.0084, 0.0074, 0.0130, 0.0121, 0.0172, 0.0085, 0.0204,
         0.0070, 0.0100, 0.0106, 0.0093, 0.0105, 0.0109, 0.0181, 0.0105, 0.0143,
         0.0075, 0.0105, 0.0123, 0.0071, 0.0055, 0.0123, 0.0138, 0.0056, 0.0145,
         0.0056, 0.0078, 0.0086, 0.0069, 0.0134, 0.0089, 0.0211, 0.0114, 0.0086,
         0.0085, 0.0311, 0.0127, 0.0151, 0.0047, 0.0132]], device='cuda:0')
Sum of probabilities per row: tensor([1.0000], device='cuda:0')
Probabilities after top-p: tensor([[0.0233, 0.0000, 0.0000, 0.0000, 0.0000, 0.0356, 0.0254, 0.0000, 0.0000,
         0.0000, 0.0319, 0.0000, 0.0258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0402,
         0.0000, 0.0000, 0.0000, 0.0232, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0219, 0.0000, 0.0224, 0.0250, 0.0000, 0.0285, 0.0275, 0.0000, 0.0000,
         0.0000, 0.0275, 0.0000, 0.0311, 0.0228, 0.0245, 0.0351, 0.0335, 0.0227,
         0.0230, 0.0000, 0.0000, 0.0000, 0.0219, 0.0205, 0.0291, 0.0000, 0.0344,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0307, 0.0000, 0.0242,
         0.0000, 0.0000, 0.0209, 0.0000, 0.0000, 0.0208, 0.0233, 0.0000, 0.0244,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0226, 0.0000, 0.0356, 0.0192, 0.0000,
         0.0000, 0.0526, 0.0214, 0.0255, 0.0000, 0.0223]], device='cuda:0')
Probabilities after softmax: tensor([[0.0110, 0.0090, 0.0116, 0.0126, 0.0149, 0.0081, 0.0079, 0.0142, 0.0090,
         0.0072, 0.0182, 0.0150, 0.0101, 0.0160, 0.0145, 0.0123, 0.0163, 0.0076,
         0.0113, 0.0108, 0.0088, 0.0141, 0.0107, 0.0050, 0.0077, 0.0090, 0.0137,
         0.0058, 0.0188, 0.0073, 0.0088, 0.0109, 0.0083, 0.0112, 0.0110, 0.0065,
         0.0225, 0.0102, 0.0104, 0.0170, 0.0140, 0.0142, 0.0129, 0.0081, 0.0148,
         0.0194, 0.0068, 0.0196, 0.0093, 0.0057, 0.0133, 0.0087, 0.0065, 0.0163,
         0.0125, 0.0148, 0.0118, 0.0069, 0.0145, 0.0072, 0.0119, 0.0101, 0.0094,
         0.0122, 0.0124, 0.0092, 0.0142, 0.0102, 0.0144, 0.0128, 0.0144, 0.0164,
         0.0201, 0.0127, 0.0128, 0.0104, 0.0178, 0.0089, 0.0082, 0.0070, 0.0061,
         0.0108, 0.0087, 0.0097, 0.0084, 0.0071, 0.0112]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0000, 0.0000, 0.0196, 0.0213, 0.0252, 0.0000, 0.0000, 0.0240, 0.0000,
         0.0000, 0.0307, 0.0253, 0.0000, 0.0269, 0.0244, 0.0207, 0.0275, 0.0000,
         0.0190, 0.0000, 0.0000, 0.0238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0231,
         0.0000, 0.0317, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0378, 0.0000, 0.0000, 0.0286, 0.0236, 0.0239, 0.0217, 0.0000, 0.0250,
         0.0327, 0.0000, 0.0331, 0.0000, 0.0000, 0.0225, 0.0000, 0.0000, 0.0275,
         0.0211, 0.0249, 0.0199, 0.0000, 0.0245, 0.0000, 0.0201, 0.0000, 0.0000,
         0.0205, 0.0209, 0.0000, 0.0240, 0.0000, 0.0242, 0.0216, 0.0242, 0.0276,
         0.0338, 0.0214, 0.0215, 0.0000, 0.0300, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0182, 0.0064, 0.0087, 0.0057, 0.0065, 0.0119, 0.0064, 0.0159, 0.0112,
         0.0038, 0.0161, 0.0109, 0.0092, 0.0074, 0.0111, 0.0108, 0.0101, 0.0295,
         0.0082, 0.0041, 0.0116, 0.0127, 0.0073, 0.0098, 0.0112, 0.0163, 0.0077,
         0.0100, 0.0144, 0.0057, 0.0102, 0.0093, 0.0050, 0.0116, 0.0115, 0.0105,
         0.0107, 0.0133, 0.0097, 0.0172, 0.0187, 0.0131, 0.0135, 0.0130, 0.0075,
         0.0124, 0.0161, 0.0105, 0.0078, 0.0159, 0.0101, 0.0119, 0.0101, 0.0147,
         0.0075, 0.0065, 0.0127, 0.0083, 0.0109, 0.0202, 0.0266, 0.0135, 0.0084,
         0.0098, 0.0115, 0.0117, 0.0094, 0.0081, 0.0167, 0.0104, 0.0103, 0.0171,
         0.0126, 0.0190, 0.0109, 0.0068, 0.0165, 0.0100, 0.0068, 0.0150, 0.0091,
         0.0148, 0.0107, 0.0149, 0.0084, 0.0048, 0.0165]], device='cuda:0')
Sum of probabilities per row: tensor([1.0000], device='cuda:0')
Probabilities after top-p: tensor([[0.0308, 0.0000, 0.0000, 0.0000, 0.0000, 0.0202, 0.0000, 0.0269, 0.0189,
         0.0000, 0.0272, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0500,
         0.0000, 0.0000, 0.0196, 0.0214, 0.0000, 0.0000, 0.0190, 0.0276, 0.0000,
         0.0000, 0.0244, 0.0000, 0.0000, 0.0000, 0.0000, 0.0196, 0.0195, 0.0000,
         0.0000, 0.0225, 0.0000, 0.0291, 0.0315, 0.0221, 0.0228, 0.0219, 0.0000,
         0.0210, 0.0273, 0.0000, 0.0000, 0.0270, 0.0000, 0.0201, 0.0000, 0.0249,
         0.0000, 0.0000, 0.0215, 0.0000, 0.0000, 0.0341, 0.0450, 0.0228, 0.0000,
         0.0000, 0.0195, 0.0199, 0.0000, 0.0000, 0.0282, 0.0000, 0.0000, 0.0288,
         0.0213, 0.0321, 0.0000, 0.0000, 0.0280, 0.0000, 0.0000, 0.0254, 0.0000,
         0.0250, 0.0000, 0.0253, 0.0000, 0.0000, 0.0278]], device='cuda:0')
Probabilities after softmax: tensor([[0.0101, 0.0042, 0.0113, 0.0180, 0.0054, 0.0210, 0.0123, 0.0054, 0.0072,
         0.0090, 0.0213, 0.0281, 0.0084, 0.0146, 0.0137, 0.0064, 0.0150, 0.0165,
         0.0083, 0.0146, 0.0116, 0.0220, 0.0116, 0.0119, 0.0068, 0.0121, 0.0067,
         0.0075, 0.0110, 0.0032, 0.0086, 0.0111, 0.0084, 0.0150, 0.0103, 0.0110,
         0.0151, 0.0074, 0.0113, 0.0078, 0.0093, 0.0106, 0.0125, 0.0075, 0.0128,
         0.0082, 0.0102, 0.0038, 0.0099, 0.0137, 0.0078, 0.0130, 0.0118, 0.0130,
         0.0126, 0.0088, 0.0111, 0.0117, 0.0116, 0.0090, 0.0093, 0.0044, 0.0152,
         0.0091, 0.0089, 0.0112, 0.0089, 0.0096, 0.0250, 0.0146, 0.0130, 0.0230,
         0.0143, 0.0058, 0.0073, 0.0068, 0.0072, 0.0182, 0.0034, 0.0324, 0.0056,
         0.0086, 0.0126, 0.0146, 0.0207, 0.0047, 0.0154]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0000, 0.0000, 0.0000, 0.0302, 0.0000, 0.0354, 0.0207, 0.0000, 0.0000,
         0.0000, 0.0358, 0.0473, 0.0000, 0.0245, 0.0231, 0.0000, 0.0252, 0.0278,
         0.0000, 0.0245, 0.0196, 0.0371, 0.0195, 0.0200, 0.0000, 0.0203, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0252, 0.0000, 0.0000,
         0.0255, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0210, 0.0000, 0.0216,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0230, 0.0000, 0.0218, 0.0199, 0.0219,
         0.0213, 0.0000, 0.0000, 0.0197, 0.0000, 0.0000, 0.0000, 0.0000, 0.0256,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0420, 0.0246, 0.0219, 0.0386,
         0.0240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0306, 0.0000, 0.0545, 0.0000,
         0.0000, 0.0212, 0.0246, 0.0348, 0.0000, 0.0259]], device='cuda:0')
Probabilities after softmax: tensor([[0.0123, 0.0090, 0.0081, 0.0132, 0.0140, 0.0207, 0.0087, 0.0067, 0.0108,
         0.0029, 0.0085, 0.0103, 0.0207, 0.0076, 0.0098, 0.0042, 0.0102, 0.0193,
         0.0079, 0.0109, 0.0067, 0.0148, 0.0088, 0.0120, 0.0110, 0.0146, 0.0058,
         0.0062, 0.0070, 0.0069, 0.0069, 0.0165, 0.0061, 0.0097, 0.0148, 0.0092,
         0.0094, 0.0147, 0.0158, 0.0052, 0.0108, 0.0169, 0.0150, 0.0080, 0.0113,
         0.0196, 0.0061, 0.0072, 0.0159, 0.0154, 0.0083, 0.0137, 0.0085, 0.0069,
         0.0103, 0.0102, 0.0093, 0.0078, 0.0135, 0.0061, 0.0110, 0.0084, 0.0144,
         0.0076, 0.0151, 0.0163, 0.0077, 0.0088, 0.0116, 0.0197, 0.0157, 0.0161,
         0.0086, 0.0115, 0.0127, 0.0113, 0.0176, 0.0164, 0.0106, 0.0256, 0.0074,
         0.0068, 0.0281, 0.0099, 0.0212, 0.0042, 0.0167]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0208, 0.0000, 0.0000, 0.0223, 0.0235, 0.0349, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0324,
         0.0000, 0.0000, 0.0000, 0.0250, 0.0000, 0.0201, 0.0000, 0.0246, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0277, 0.0000, 0.0000, 0.0248, 0.0000,
         0.0000, 0.0247, 0.0266, 0.0000, 0.0000, 0.0284, 0.0252, 0.0000, 0.0190,
         0.0330, 0.0000, 0.0000, 0.0267, 0.0259, 0.0000, 0.0229, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0227, 0.0000, 0.0000, 0.0000, 0.0243,
         0.0000, 0.0254, 0.0273, 0.0000, 0.0000, 0.0195, 0.0332, 0.0265, 0.0271,
         0.0000, 0.0194, 0.0213, 0.0190, 0.0296, 0.0276, 0.0000, 0.0430, 0.0000,
         0.0000, 0.0473, 0.0000, 0.0356, 0.0000, 0.0281]], device='cuda:0')
Probabilities after softmax: tensor([[0.0190, 0.0089, 0.0088, 0.0100, 0.0156, 0.0165, 0.0098, 0.0127, 0.0063,
         0.0064, 0.0102, 0.0088, 0.0090, 0.0093, 0.0092, 0.0056, 0.0112, 0.0202,
         0.0091, 0.0091, 0.0059, 0.0077, 0.0092, 0.0068, 0.0072, 0.0074, 0.0166,
         0.0185, 0.0092, 0.0235, 0.0095, 0.0097, 0.0069, 0.0162, 0.0181, 0.0105,
         0.0079, 0.0102, 0.0073, 0.0103, 0.0327, 0.0087, 0.0154, 0.0176, 0.0080,
         0.0096, 0.0080, 0.0136, 0.0104, 0.0151, 0.0152, 0.0048, 0.0094, 0.0110,
         0.0070, 0.0071, 0.0089, 0.0093, 0.0091, 0.0117, 0.0116, 0.0170, 0.0181,
         0.0095, 0.0168, 0.0136, 0.0126, 0.0107, 0.0147, 0.0102, 0.0132, 0.0131,
         0.0066, 0.0188, 0.0211, 0.0074, 0.0101, 0.0125, 0.0129, 0.0121, 0.0071,
         0.0124, 0.0091, 0.0100, 0.0091, 0.0125, 0.0104]], device='cuda:0')
Sum of probabilities per row: tensor([1.0000], device='cuda:0')
Probabilities after top-p: tensor([[0.0319, 0.0000, 0.0000, 0.0000, 0.0262, 0.0277, 0.0000, 0.0213, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0188, 0.0340,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0279,
         0.0310, 0.0000, 0.0395, 0.0000, 0.0000, 0.0000, 0.0272, 0.0303, 0.0177,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0550, 0.0000, 0.0259, 0.0295, 0.0000,
         0.0000, 0.0000, 0.0228, 0.0175, 0.0254, 0.0255, 0.0000, 0.0000, 0.0184,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0196, 0.0195, 0.0285, 0.0304,
         0.0000, 0.0282, 0.0229, 0.0211, 0.0180, 0.0247, 0.0000, 0.0221, 0.0221,
         0.0000, 0.0316, 0.0354, 0.0000, 0.0000, 0.0210, 0.0217, 0.0204, 0.0000,
         0.0208, 0.0000, 0.0000, 0.0000, 0.0210, 0.0175]], device='cuda:0')
Probabilities after softmax: tensor([[0.0062, 0.0055, 0.0136, 0.0119, 0.0373, 0.0126, 0.0159, 0.0137, 0.0108,
         0.0056, 0.0068, 0.0047, 0.0193, 0.0117, 0.0058, 0.0050, 0.0053, 0.0096,
         0.0043, 0.0099, 0.0053, 0.0070, 0.0137, 0.0044, 0.0062, 0.0175, 0.0093,
         0.0114, 0.0115, 0.0131, 0.0133, 0.0135, 0.0129, 0.0108, 0.0131, 0.0145,
         0.0126, 0.0091, 0.0099, 0.0119, 0.0163, 0.0121, 0.0220, 0.0136, 0.0088,
         0.0141, 0.0081, 0.0060, 0.0247, 0.0141, 0.0108, 0.0246, 0.0119, 0.0075,
         0.0076, 0.0114, 0.0111, 0.0167, 0.0218, 0.0078, 0.0132, 0.0154, 0.0093,
         0.0097, 0.0090, 0.0113, 0.0099, 0.0092, 0.0098, 0.0137, 0.0045, 0.0176,
         0.0064, 0.0106, 0.0112, 0.0082, 0.0111, 0.0213, 0.0102, 0.0098, 0.0104,
         0.0073, 0.0104, 0.0089, 0.0157, 0.0061, 0.0130]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0000, 0.0000, 0.0228, 0.0200, 0.0625, 0.0211, 0.0267, 0.0229, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0323, 0.0196, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0229, 0.0000, 0.0000, 0.0293, 0.0000,
         0.0192, 0.0193, 0.0219, 0.0223, 0.0226, 0.0216, 0.0000, 0.0220, 0.0244,
         0.0211, 0.0000, 0.0000, 0.0200, 0.0273, 0.0203, 0.0369, 0.0229, 0.0000,
         0.0236, 0.0000, 0.0000, 0.0414, 0.0236, 0.0000, 0.0412, 0.0199, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0280, 0.0366, 0.0000, 0.0221, 0.0258, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0229, 0.0000, 0.0296,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0356, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0263, 0.0000, 0.0218]], device='cuda:0')
Probabilities after softmax: tensor([[0.0315, 0.0100, 0.0073, 0.0120, 0.0108, 0.0159, 0.0088, 0.0072, 0.0152,
         0.0086, 0.0082, 0.0196, 0.0114, 0.0097, 0.0056, 0.0071, 0.0137, 0.0134,
         0.0072, 0.0074, 0.0095, 0.0086, 0.0082, 0.0128, 0.0077, 0.0124, 0.0103,
         0.0149, 0.0115, 0.0068, 0.0089, 0.0098, 0.0106, 0.0131, 0.0092, 0.0096,
         0.0170, 0.0104, 0.0048, 0.0058, 0.0045, 0.0047, 0.0114, 0.0072, 0.0140,
         0.0226, 0.0079, 0.0261, 0.0158, 0.0080, 0.0082, 0.0100, 0.0074, 0.0216,
         0.0112, 0.0110, 0.0071, 0.0131, 0.0113, 0.0159, 0.0078, 0.0083, 0.0197,
         0.0142, 0.0094, 0.0114, 0.0094, 0.0082, 0.0077, 0.0296, 0.0088, 0.0151,
         0.0112, 0.0090, 0.0098, 0.0066, 0.0099, 0.0054, 0.0096, 0.0128, 0.0093,
         0.0067, 0.0273, 0.0077, 0.0271, 0.0102, 0.0165]], device='cuda:0')
Sum of probabilities per row: tensor([1.0000], device='cuda:0')
Probabilities after top-p: tensor([[0.0529, 0.0000, 0.0000, 0.0202, 0.0181, 0.0267, 0.0000, 0.0000, 0.0255,
         0.0000, 0.0000, 0.0330, 0.0192, 0.0000, 0.0000, 0.0000, 0.0230, 0.0226,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0216, 0.0000, 0.0209, 0.0000,
         0.0251, 0.0194, 0.0000, 0.0000, 0.0000, 0.0178, 0.0221, 0.0000, 0.0000,
         0.0286, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0191, 0.0000, 0.0236,
         0.0380, 0.0000, 0.0438, 0.0266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0364,
         0.0188, 0.0185, 0.0000, 0.0221, 0.0190, 0.0267, 0.0000, 0.0000, 0.0331,
         0.0240, 0.0000, 0.0192, 0.0000, 0.0000, 0.0000, 0.0497, 0.0000, 0.0254,
         0.0189, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0215, 0.0000,
         0.0000, 0.0459, 0.0000, 0.0456, 0.0000, 0.0277]], device='cuda:0')
Probabilities after softmax: tensor([[0.0122, 0.0094, 0.0103, 0.0234, 0.0162, 0.0113, 0.0095, 0.0108, 0.0087,
         0.0151, 0.0063, 0.0146, 0.0076, 0.0131, 0.0076, 0.0143, 0.0179, 0.0123,
         0.0053, 0.0091, 0.0086, 0.0158, 0.0072, 0.0121, 0.0148, 0.0114, 0.0098,
         0.0084, 0.0213, 0.0146, 0.0157, 0.0134, 0.0145, 0.0066, 0.0091, 0.0085,
         0.0124, 0.0128, 0.0081, 0.0055, 0.0143, 0.0077, 0.0096, 0.0059, 0.0195,
         0.0127, 0.0156, 0.0133, 0.0050, 0.0090, 0.0112, 0.0065, 0.0088, 0.0174,
         0.0140, 0.0086, 0.0054, 0.0152, 0.0091, 0.0132, 0.0151, 0.0145, 0.0112,
         0.0085, 0.0105, 0.0056, 0.0025, 0.0086, 0.0186, 0.0061, 0.0043, 0.0158,
         0.0078, 0.0098, 0.0084, 0.0034, 0.0121, 0.0138, 0.0153, 0.0185, 0.0057,
         0.0094, 0.0199, 0.0150, 0.0347, 0.0095, 0.0078]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0206, 0.0000, 0.0000, 0.0396, 0.0275, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0256, 0.0000, 0.0247, 0.0000, 0.0223, 0.0000, 0.0242, 0.0303, 0.0207,
         0.0000, 0.0000, 0.0000, 0.0268, 0.0000, 0.0000, 0.0251, 0.0000, 0.0000,
         0.0000, 0.0361, 0.0248, 0.0266, 0.0227, 0.0246, 0.0000, 0.0000, 0.0000,
         0.0210, 0.0216, 0.0000, 0.0000, 0.0242, 0.0000, 0.0000, 0.0000, 0.0330,
         0.0214, 0.0264, 0.0225, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0295,
         0.0237, 0.0000, 0.0000, 0.0257, 0.0000, 0.0223, 0.0256, 0.0246, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0315, 0.0000, 0.0000, 0.0267,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0233, 0.0259, 0.0313, 0.0000,
         0.0000, 0.0338, 0.0253, 0.0587, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0111, 0.0114, 0.0124, 0.0105, 0.0157, 0.0108, 0.0135, 0.0065, 0.0071,
         0.0109, 0.0157, 0.0243, 0.0096, 0.0119, 0.0086, 0.0104, 0.0175, 0.0162,
         0.0144, 0.0105, 0.0047, 0.0191, 0.0052, 0.0104, 0.0101, 0.0080, 0.0111,
         0.0143, 0.0096, 0.0070, 0.0082, 0.0110, 0.0127, 0.0252, 0.0072, 0.0082,
         0.0085, 0.0079, 0.0071, 0.0186, 0.0142, 0.0127, 0.0054, 0.0220, 0.0098,
         0.0127, 0.0129, 0.0109, 0.0130, 0.0123, 0.0166, 0.0068, 0.0064, 0.0139,
         0.0061, 0.0148, 0.0130, 0.0089, 0.0150, 0.0065, 0.0159, 0.0128, 0.0130,
         0.0063, 0.0130, 0.0083, 0.0137, 0.0102, 0.0147, 0.0086, 0.0090, 0.0077,
         0.0120, 0.0191, 0.0064, 0.0114, 0.0117, 0.0085, 0.0116, 0.0075, 0.0047,
         0.0086, 0.0323, 0.0098, 0.0093, 0.0115, 0.0055]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0000, 0.0191, 0.0208, 0.0000, 0.0263, 0.0000, 0.0227, 0.0000, 0.0000,
         0.0000, 0.0263, 0.0406, 0.0000, 0.0199, 0.0000, 0.0000, 0.0293, 0.0271,
         0.0241, 0.0000, 0.0000, 0.0321, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0213, 0.0421, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0312, 0.0237, 0.0213, 0.0000, 0.0369, 0.0000,
         0.0212, 0.0216, 0.0000, 0.0217, 0.0205, 0.0278, 0.0000, 0.0000, 0.0232,
         0.0000, 0.0247, 0.0218, 0.0000, 0.0252, 0.0000, 0.0266, 0.0215, 0.0218,
         0.0000, 0.0217, 0.0000, 0.0230, 0.0000, 0.0247, 0.0000, 0.0000, 0.0000,
         0.0201, 0.0319, 0.0000, 0.0000, 0.0196, 0.0000, 0.0193, 0.0000, 0.0000,
         0.0000, 0.0540, 0.0000, 0.0000, 0.0193, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0133, 0.0103, 0.0133, 0.0085, 0.0182, 0.0135, 0.0138, 0.0098, 0.0104,
         0.0125, 0.0118, 0.0104, 0.0064, 0.0067, 0.0080, 0.0110, 0.0147, 0.0111,
         0.0125, 0.0074, 0.0146, 0.0127, 0.0105, 0.0065, 0.0112, 0.0125, 0.0079,
         0.0124, 0.0173, 0.0112, 0.0108, 0.0060, 0.0155, 0.0189, 0.0134, 0.0120,
         0.0166, 0.0115, 0.0077, 0.0139, 0.0061, 0.0089, 0.0067, 0.0060, 0.0086,
         0.0127, 0.0077, 0.0126, 0.0056, 0.0104, 0.0130, 0.0083, 0.0097, 0.0105,
         0.0104, 0.0165, 0.0250, 0.0120, 0.0175, 0.0082, 0.0089, 0.0070, 0.0113,
         0.0121, 0.0073, 0.0130, 0.0114, 0.0060, 0.0137, 0.0189, 0.0108, 0.0077,
         0.0130, 0.0071, 0.0155, 0.0117, 0.0104, 0.0144, 0.0122, 0.0092, 0.0148,
         0.0131, 0.0250, 0.0109, 0.0088, 0.0135, 0.0087]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0223, 0.0000, 0.0223, 0.0000, 0.0306, 0.0226, 0.0231, 0.0000, 0.0000,
         0.0211, 0.0199, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0248, 0.0000,
         0.0210, 0.0000, 0.0245, 0.0213, 0.0000, 0.0000, 0.0000, 0.0210, 0.0000,
         0.0208, 0.0291, 0.0000, 0.0000, 0.0000, 0.0261, 0.0318, 0.0225, 0.0202,
         0.0278, 0.0194, 0.0000, 0.0234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0213, 0.0000, 0.0212, 0.0000, 0.0000, 0.0218, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0277, 0.0420, 0.0202, 0.0295, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0203, 0.0000, 0.0219, 0.0000, 0.0000, 0.0230, 0.0318, 0.0000, 0.0000,
         0.0218, 0.0000, 0.0260, 0.0197, 0.0000, 0.0242, 0.0204, 0.0000, 0.0249,
         0.0220, 0.0419, 0.0000, 0.0000, 0.0227, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0122, 0.0084, 0.0132, 0.0098, 0.0107, 0.0208, 0.0156, 0.0043, 0.0059,
         0.0057, 0.0156, 0.0235, 0.0134, 0.0136, 0.0091, 0.0063, 0.0063, 0.0131,
         0.0192, 0.0099, 0.0036, 0.0116, 0.0147, 0.0051, 0.0062, 0.0080, 0.0161,
         0.0049, 0.0203, 0.0123, 0.0141, 0.0135, 0.0066, 0.0138, 0.0099, 0.0119,
         0.0108, 0.0152, 0.0134, 0.0299, 0.0133, 0.0239, 0.0055, 0.0082, 0.0090,
         0.0151, 0.0113, 0.0065, 0.0120, 0.0147, 0.0086, 0.0089, 0.0078, 0.0056,
         0.0138, 0.0179, 0.0082, 0.0117, 0.0072, 0.0053, 0.0148, 0.0117, 0.0088,
         0.0081, 0.0118, 0.0077, 0.0144, 0.0124, 0.0117, 0.0099, 0.0145, 0.0092,
         0.0136, 0.0100, 0.0137, 0.0044, 0.0112, 0.0129, 0.0108, 0.0136, 0.0126,
         0.0101, 0.0085, 0.0167, 0.0135, 0.0087, 0.0116]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0203, 0.0000, 0.0220, 0.0000, 0.0000, 0.0348, 0.0261, 0.0000, 0.0000,
         0.0000, 0.0260, 0.0393, 0.0224, 0.0227, 0.0000, 0.0000, 0.0000, 0.0218,
         0.0321, 0.0000, 0.0000, 0.0000, 0.0245, 0.0000, 0.0000, 0.0000, 0.0268,
         0.0000, 0.0339, 0.0206, 0.0236, 0.0225, 0.0000, 0.0230, 0.0000, 0.0199,
         0.0000, 0.0254, 0.0224, 0.0500, 0.0221, 0.0399, 0.0000, 0.0000, 0.0000,
         0.0252, 0.0000, 0.0000, 0.0200, 0.0246, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0231, 0.0299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0247, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0240, 0.0207, 0.0000, 0.0000, 0.0242, 0.0000,
         0.0227, 0.0000, 0.0230, 0.0000, 0.0000, 0.0216, 0.0000, 0.0228, 0.0210,
         0.0000, 0.0000, 0.0279, 0.0225, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0270, 0.0113, 0.0097, 0.0085, 0.0091, 0.0102, 0.0085, 0.0050, 0.0126,
         0.0063, 0.0176, 0.0124, 0.0132, 0.0075, 0.0100, 0.0096, 0.0208, 0.0151,
         0.0093, 0.0076, 0.0089, 0.0096, 0.0054, 0.0091, 0.0078, 0.0158, 0.0116,
         0.0105, 0.0078, 0.0095, 0.0083, 0.0129, 0.0118, 0.0096, 0.0186, 0.0078,
         0.0123, 0.0074, 0.0120, 0.0097, 0.0118, 0.0112, 0.0221, 0.0039, 0.0126,
         0.0137, 0.0080, 0.0086, 0.0116, 0.0109, 0.0112, 0.0104, 0.0114, 0.0098,
         0.0107, 0.0050, 0.0060, 0.0063, 0.0096, 0.0130, 0.0205, 0.0080, 0.0152,
         0.0101, 0.0193, 0.0134, 0.0051, 0.0118, 0.0120, 0.0064, 0.0141, 0.0163,
         0.0134, 0.0090, 0.0182, 0.0120, 0.0131, 0.0278, 0.0079, 0.0061, 0.0079,
         0.0175, 0.0228, 0.0110, 0.0089, 0.0185, 0.0085]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0452, 0.0188, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0211,
         0.0000, 0.0294, 0.0207, 0.0221, 0.0000, 0.0000, 0.0000, 0.0348, 0.0252,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0264, 0.0194,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0216, 0.0196, 0.0000, 0.0310, 0.0000,
         0.0205, 0.0000, 0.0201, 0.0000, 0.0197, 0.0187, 0.0370, 0.0000, 0.0211,
         0.0229, 0.0000, 0.0000, 0.0193, 0.0000, 0.0000, 0.0000, 0.0190, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0217, 0.0343, 0.0000, 0.0254,
         0.0000, 0.0322, 0.0224, 0.0000, 0.0197, 0.0201, 0.0000, 0.0235, 0.0273,
         0.0224, 0.0000, 0.0304, 0.0201, 0.0219, 0.0465, 0.0000, 0.0000, 0.0000,
         0.0293, 0.0381, 0.0000, 0.0000, 0.0309, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0122, 0.0127, 0.0168, 0.0071, 0.0180, 0.0236, 0.0087, 0.0125, 0.0071,
         0.0116, 0.0076, 0.0076, 0.0061, 0.0087, 0.0054, 0.0056, 0.0139, 0.0178,
         0.0065, 0.0049, 0.0052, 0.0091, 0.0095, 0.0055, 0.0083, 0.0080, 0.0118,
         0.0137, 0.0140, 0.0073, 0.0173, 0.0136, 0.0095, 0.0165, 0.0145, 0.0096,
         0.0093, 0.0090, 0.0093, 0.0152, 0.0144, 0.0222, 0.0057, 0.0137, 0.0096,
         0.0116, 0.0113, 0.0105, 0.0095, 0.0135, 0.0122, 0.0055, 0.0107, 0.0146,
         0.0070, 0.0203, 0.0160, 0.0122, 0.0147, 0.0234, 0.0211, 0.0135, 0.0058,
         0.0137, 0.0139, 0.0145, 0.0084, 0.0047, 0.0124, 0.0071, 0.0098, 0.0120,
         0.0092, 0.0151, 0.0124, 0.0066, 0.0116, 0.0098, 0.0187, 0.0112, 0.0062,
         0.0159, 0.0178, 0.0119, 0.0131, 0.0050, 0.0095]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0206, 0.0215, 0.0283, 0.0000, 0.0305, 0.0399, 0.0000, 0.0211, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0235, 0.0300,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0232, 0.0237, 0.0000, 0.0292, 0.0229, 0.0000, 0.0278, 0.0246, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0258, 0.0244, 0.0375, 0.0000, 0.0232, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0228, 0.0207, 0.0000, 0.0000, 0.0246,
         0.0000, 0.0343, 0.0270, 0.0207, 0.0248, 0.0395, 0.0356, 0.0228, 0.0000,
         0.0232, 0.0235, 0.0244, 0.0000, 0.0000, 0.0210, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0256, 0.0209, 0.0000, 0.0000, 0.0000, 0.0316, 0.0000, 0.0000,
         0.0269, 0.0301, 0.0000, 0.0221, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0121, 0.0117, 0.0093, 0.0120, 0.0258, 0.0116, 0.0092, 0.0070, 0.0168,
         0.0126, 0.0053, 0.0163, 0.0099, 0.0121, 0.0081, 0.0054, 0.0113, 0.0100,
         0.0180, 0.0115, 0.0066, 0.0082, 0.0112, 0.0188, 0.0106, 0.0128, 0.0044,
         0.0090, 0.0191, 0.0176, 0.0107, 0.0152, 0.0094, 0.0093, 0.0124, 0.0218,
         0.0154, 0.0161, 0.0107, 0.0137, 0.0092, 0.0050, 0.0151, 0.0069, 0.0057,
         0.0123, 0.0087, 0.0060, 0.0116, 0.0117, 0.0149, 0.0231, 0.0068, 0.0071,
         0.0121, 0.0148, 0.0041, 0.0086, 0.0157, 0.0106, 0.0080, 0.0051, 0.0097,
         0.0123, 0.0119, 0.0094, 0.0136, 0.0089, 0.0130, 0.0083, 0.0163, 0.0089,
         0.0100, 0.0133, 0.0136, 0.0136, 0.0075, 0.0104, 0.0099, 0.0122, 0.0088,
         0.0110, 0.0121, 0.0087, 0.0195, 0.0156, 0.0092]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0202, 0.0195, 0.0000, 0.0200, 0.0432, 0.0193, 0.0000, 0.0000, 0.0281,
         0.0210, 0.0000, 0.0272, 0.0000, 0.0202, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0301, 0.0000, 0.0000, 0.0000, 0.0000, 0.0314, 0.0000, 0.0213, 0.0000,
         0.0000, 0.0320, 0.0295, 0.0000, 0.0254, 0.0000, 0.0000, 0.0207, 0.0365,
         0.0256, 0.0269, 0.0000, 0.0230, 0.0000, 0.0000, 0.0253, 0.0000, 0.0000,
         0.0205, 0.0000, 0.0000, 0.0000, 0.0195, 0.0249, 0.0386, 0.0000, 0.0000,
         0.0203, 0.0248, 0.0000, 0.0000, 0.0263, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0205, 0.0199, 0.0000, 0.0227, 0.0000, 0.0218, 0.0000, 0.0273, 0.0000,
         0.0000, 0.0222, 0.0227, 0.0227, 0.0000, 0.0000, 0.0000, 0.0204, 0.0000,
         0.0000, 0.0202, 0.0000, 0.0325, 0.0261, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0246, 0.0140, 0.0096, 0.0058, 0.0103, 0.0101, 0.0111, 0.0082, 0.0096,
         0.0042, 0.0166, 0.0209, 0.0081, 0.0092, 0.0074, 0.0110, 0.0123, 0.0173,
         0.0078, 0.0070, 0.0126, 0.0095, 0.0047, 0.0071, 0.0060, 0.0112, 0.0068,
         0.0096, 0.0160, 0.0062, 0.0106, 0.0115, 0.0066, 0.0116, 0.0156, 0.0143,
         0.0144, 0.0083, 0.0098, 0.0083, 0.0102, 0.0103, 0.0170, 0.0100, 0.0071,
         0.0095, 0.0070, 0.0127, 0.0091, 0.0144, 0.0103, 0.0165, 0.0085, 0.0108,
         0.0086, 0.0058, 0.0196, 0.0108, 0.0086, 0.0091, 0.0401, 0.0094, 0.0110,
         0.0115, 0.0142, 0.0126, 0.0086, 0.0102, 0.0170, 0.0112, 0.0122, 0.0119,
         0.0140, 0.0137, 0.0106, 0.0083, 0.0139, 0.0119, 0.0111, 0.0127, 0.0164,
         0.0134, 0.0218, 0.0148, 0.0091, 0.0066, 0.0104]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0417, 0.0237, 0.0000, 0.0000, 0.0000, 0.0000, 0.0188, 0.0000, 0.0000,
         0.0000, 0.0281, 0.0354, 0.0000, 0.0000, 0.0000, 0.0000, 0.0209, 0.0293,
         0.0000, 0.0000, 0.0214, 0.0000, 0.0000, 0.0000, 0.0000, 0.0190, 0.0000,
         0.0000, 0.0272, 0.0000, 0.0000, 0.0195, 0.0000, 0.0197, 0.0264, 0.0243,
         0.0244, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0288, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0215, 0.0000, 0.0244, 0.0000, 0.0280, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0333, 0.0000, 0.0000, 0.0000, 0.0680, 0.0000, 0.0186,
         0.0195, 0.0241, 0.0214, 0.0000, 0.0000, 0.0288, 0.0190, 0.0208, 0.0202,
         0.0237, 0.0232, 0.0000, 0.0000, 0.0237, 0.0202, 0.0188, 0.0216, 0.0279,
Finding best initial lr:   1%|          | 1/100 [00:26<43:02, 26.09s/it]Finding best initial lr:   2%|▏         | 2/100 [00:26<17:39, 10.82s/it]Finding best initial lr:   3%|▎         | 3/100 [00:26<09:35,  5.93s/it]Finding best initial lr:   4%|▍         | 4/100 [00:26<05:49,  3.64s/it]Finding best initial lr:   5%|▌         | 5/100 [00:26<03:45,  2.37s/it]Finding best initial lr:   6%|▌         | 6/100 [00:26<02:30,  1.61s/it]Finding best initial lr:   7%|▋         | 7/100 [00:26<01:44,  1.12s/it]Finding best initial lr:   8%|▊         | 8/100 [00:26<01:13,  1.25it/s]Finding best initial lr:   9%|▉         | 9/100 [00:27<00:53,  1.70it/s]Finding best initial lr:  10%|█         | 10/100 [00:27<00:40,  2.25it/s]Finding best initial lr:  11%|█         | 11/100 [00:27<00:30,  2.89it/s]Finding best initial lr:  12%|█▏        | 12/100 [00:27<00:24,  3.61it/s]Finding best initial lr:  13%|█▎        | 13/100 [00:27<00:20,  4.35it/s]Finding best initial lr:  14%|█▍        | 14/100 [00:27<00:16,  5.07it/s]Finding best initial lr:  15%|█▌        | 15/100 [00:27<00:14,  5.74it/s]Finding best initial lr:  16%|█▌        | 16/100 [00:27<00:13,  6.32it/s]Finding best initial lr:  17%|█▋        | 17/100 [00:28<00:12,  6.80it/s]Finding best initial lr:  18%|█▊        | 18/100 [00:28<00:11,  7.18it/s]Finding best initial lr:  19%|█▉        | 19/100 [00:28<00:10,  7.47it/s]Finding best initial lr:  20%|██        | 20/100 [00:28<00:10,  7.69it/s]Finding best initial lr:  21%|██        | 21/100 [00:28<00:10,  7.85it/s]Finding best initial lr:  22%|██▏       | 22/100 [00:28<00:09,  7.97it/s]Finding best initial lr:  23%|██▎       | 23/100 [00:28<00:09,  8.05it/s]Finding best initial lr:  24%|██▍       | 24/100 [00:28<00:09,  8.12it/s]Finding best initial lr:  25%|██▌       | 25/100 [00:29<00:09,  8.13it/s]Finding best initial lr:  26%|██▌       | 26/100 [00:29<00:09,  8.17it/s]Finding best initial lr:  27%|██▋       | 27/100 [00:29<00:08,  8.19it/s]Finding best initial lr:  28%|██▊       | 28/100 [00:29<00:08,  8.21it/s]Finding best initial lr:  29%|██▉       | 29/100 [00:29<00:08,  8.22it/s]Finding best initial lr:  30%|███       | 30/100 [00:29<00:08,  8.23it/s]Finding best initial lr:  31%|███       | 31/100 [00:29<00:08,  8.24it/s]Finding best initial lr:  32%|███▏      | 32/100 [00:29<00:08,  8.24it/s]Finding best initial lr:  33%|███▎      | 33/100 [00:29<00:08,  8.24it/s]Finding best initial lr:  34%|███▍      | 34/100 [00:30<00:08,  8.25it/s]Finding best initial lr:  35%|███▌      | 35/100 [00:30<00:07,  8.25it/s]Finding best initial lr:  36%|███▌      | 36/100 [00:30<00:07,  8.25it/s]Finding best initial lr:  37%|███▋      | 37/100 [00:30<00:07,  8.25it/s]Finding best initial lr:  38%|███▊      | 38/100 [00:30<00:07,  8.25it/s]Finding best initial lr:  39%|███▉      | 39/100 [00:30<00:07,  8.25it/s]Finding best initial lr:  40%|████      | 40/100 [00:30<00:07,  8.26it/s]Finding best initial lr:  41%|████      | 41/100 [00:30<00:07,  8.26it/s]Finding best initial lr:  42%|████▏     | 42/100 [00:31<00:07,  8.26it/s]Finding best initial lr:  43%|████▎     | 43/100 [00:31<00:06,  8.26it/s]Finding best initial lr:  44%|████▍     | 44/100 [00:31<00:06,  8.26it/s]Finding best initial lr:  45%|████▌     | 45/100 [00:31<00:06,  8.26it/s]Finding best initial lr:  46%|████▌     | 46/100 [00:31<00:06,  8.26it/s]Finding best initial lr:  47%|████▋     | 47/100 [00:31<00:06,  8.26it/s]Finding best initial lr:  48%|████▊     | 48/100 [00:31<00:06,  8.26it/s]Finding best initial lr:  49%|████▉     | 49/100 [00:31<00:06,  8.26it/s]Finding best initial lr:  50%|█████     | 50/100 [00:32<00:06,  8.26it/s]Finding best initial lr:  51%|█████     | 51/100 [00:32<00:05,  8.25it/s]Finding best initial lr:  52%|█████▏    | 52/100 [00:32<00:05,  8.25it/s]Finding best initial lr:  53%|█████▎    | 53/100 [00:32<00:05,  8.26it/s]Finding best initial lr:  54%|█████▍    | 54/100 [00:32<00:05,  8.25it/s]Finding best initial lr:  55%|█████▌    | 55/100 [00:32<00:05,  8.25it/s]Finding best initial lr:  56%|█████▌    | 56/100 [00:32<00:05,  8.25it/s]Finding best initial lr:  57%|█████▋    | 57/100 [00:32<00:05,  8.25it/s]Finding best initial lr:  58%|█████▊    | 58/100 [00:32<00:05,  8.25it/s]Finding best initial lr:  59%|█████▉    | 59/100 [00:33<00:04,  8.26it/s]Finding best initial lr:  60%|██████    | 60/100 [00:33<00:04,  8.24it/s]Finding best initial lr:  61%|██████    | 61/100 [00:33<00:04,  8.25it/s]Finding best initial lr:  62%|██████▏   | 62/100 [00:33<00:04,  8.25it/s]Finding best initial lr:  63%|██████▎   | 63/100 [00:33<00:04,  8.25it/s]Finding best initial lr:  64%|██████▍   | 64/100 [00:33<00:04,  8.25it/s]Finding best initial lr:  65%|██████▌   | 65/100 [00:33<00:04,  8.25it/s]Finding best initial lr:  66%|██████▌   | 66/100 [00:33<00:04,  8.25it/s]Finding best initial lr:  67%|██████▋   | 67/100 [00:34<00:03,  8.25it/s]Finding best initial lr:  68%|██████▊   | 68/100 [00:34<00:03,  8.25it/s]Finding best initial lr:  69%|██████▉   | 69/100 [00:34<00:03,  8.26it/s]Finding best initial lr:  70%|███████   | 70/100 [00:34<00:03,  8.26it/s]Finding best initial lr:  71%|███████   | 71/100 [00:34<00:03,  8.26it/s]Finding best initial lr:  72%|███████▏  | 72/100 [00:34<00:03,  8.26it/s]Finding best initial lr:  73%|███████▎  | 73/100 [00:34<00:03,  8.26it/s]Finding best initial lr:  74%|███████▍  | 74/100 [00:34<00:03,  8.26it/s]Finding best initial lr:  75%|███████▌  | 75/100 [00:35<00:03,  8.26it/s]Finding best initial lr:  76%|███████▌  | 76/100 [00:35<00:02,  8.26it/s]Finding best initial lr:  77%|███████▋  | 77/100 [00:35<00:02,  8.26it/s]Finding best initial lr:  78%|███████▊  | 78/100 [00:35<00:02,  8.26it/s]Finding best initial lr:  79%|███████▉  | 79/100 [00:35<00:02,  8.19it/s]Finding best initial lr:  80%|████████  | 80/100 [00:35<00:02,  8.19it/s]Finding best initial lr:  81%|████████  | 81/100 [00:35<00:02,  8.21it/s]Finding best initial lr:  82%|████████▏ | 82/100 [00:35<00:02,  8.23it/s]Finding best initial lr:  83%|████████▎ | 83/100 [00:36<00:02,  8.23it/s]Finding best initial lr:  84%|████████▍ | 84/100 [00:36<00:01,  8.24it/s]Finding best initial lr:  85%|████████▌ | 85/100 [00:36<00:01,  8.25it/s]Finding best initial lr:  86%|████████▌ | 86/100 [00:36<00:01,  8.26it/s]Finding best initial lr:  87%|████████▋ | 87/100 [00:36<00:01,  8.26it/s]Finding best initial lr:  88%|████████▊ | 88/100 [00:36<00:01,  8.26it/s]Finding best initial lr:  89%|████████▉ | 89/100 [00:36<00:01,  8.26it/s]Finding best initial lr:  90%|█████████ | 90/100 [00:36<00:01,  8.26it/s]Finding best initial lr:  91%|█████████ | 91/100 [00:37<00:01,  8.26it/s]Finding best initial lr:  92%|█████████▏| 92/100 [00:37<00:00,  8.26it/s]Finding best initial lr:  93%|█████████▎| 93/100 [00:37<00:00,  8.26it/s]Finding best initial lr:  94%|█████████▍| 94/100 [00:37<00:00,  8.26it/s]Finding best initial lr:  95%|█████████▌| 95/100 [00:37<00:00,  8.26it/s]Finding best initial lr:  96%|█████████▌| 96/100 [00:37<00:00,  8.26it/s]Finding best initial lr:  97%|█████████▋| 97/100 [00:37<00:00,  8.26it/s]Finding best initial lr:  98%|█████████▊| 98/100 [00:37<00:00,  8.26it/s]Finding best initial lr:  99%|█████████▉| 99/100 [00:37<00:00,  8.26it/s]Finding best initial lr: 100%|██████████| 100/100 [00:38<00:00,  8.26it/s]`Trainer.fit` stopped: `max_steps=100` reached.
Finding best initial lr: 100%|██████████| 100/100 [00:38<00:00,  2.63it/s]
Learning rate set to 0.0003019951720402019
Restoring states from the checkpoint path at /gpfs/home6/scur2773/uvadlc_practicals_2024/assignment2/part2/.lr_find_3ae8fe4e-ce1c-49f8-8a19-711cfedf58be.ckpt
Restored all states from the checkpoint at /gpfs/home6/scur2773/uvadlc_practicals_2024/assignment2/part2/.lr_find_3ae8fe4e-ce1c-49f8-8a19-711cfedf58be.ckpt

  | Name  | Type            | Params | Mode 
--------------------------------------------------
0 | model | OptimizedModule | 10.8 M | train
--------------------------------------------------
10.8 M    Trainable params
0         Non-trainable params
10.8 M    Total params
43.053    Total estimated model params size (MB)
87        Modules in train mode
0         Modules in eval mode
Restored all states from the checkpoint at /gpfs/home6/scur2773/uvadlc_practicals_2024/assignment2/part2/.lr_find_3ae8fe4e-ce1c-49f8-8a19-711cfedf58be.ckpt
SLURM auto-requeueing enabled. Setting signal handlers.
         0.0228, 0.0371, 0.0250, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0253, 0.0144, 0.0126, 0.0072, 0.0084, 0.0097, 0.0123, 0.0144, 0.0113,
         0.0064, 0.0064, 0.0126, 0.0096, 0.0143, 0.0087, 0.0104, 0.0153, 0.0173,
         0.0089, 0.0124, 0.0090, 0.0068, 0.0083, 0.0065, 0.0101, 0.0096, 0.0110,
         0.0133, 0.0097, 0.0091, 0.0093, 0.0133, 0.0165, 0.0130, 0.0119, 0.0196,
         0.0069, 0.0101, 0.0115, 0.0104, 0.0120, 0.0139, 0.0122, 0.0074, 0.0151,
         0.0094, 0.0052, 0.0092, 0.0082, 0.0116, 0.0059, 0.0177, 0.0091, 0.0075,
         0.0082, 0.0134, 0.0104, 0.0055, 0.0156, 0.0110, 0.0129, 0.0099, 0.0091,
         0.0064, 0.0136, 0.0152, 0.0215, 0.0148, 0.0094, 0.0160, 0.0199, 0.0166,
         0.0153, 0.0136, 0.0080, 0.0114, 0.0122, 0.0128, 0.0074, 0.0121, 0.0095,
         0.0136, 0.0201, 0.0058, 0.0151, 0.0059, 0.0094]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0425, 0.0242, 0.0211, 0.0000, 0.0000, 0.0000, 0.0207, 0.0242, 0.0000,
         0.0000, 0.0000, 0.0212, 0.0000, 0.0241, 0.0000, 0.0000, 0.0258, 0.0291,
         0.0000, 0.0208, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0223, 0.0000, 0.0000, 0.0000, 0.0223, 0.0278, 0.0219, 0.0199, 0.0330,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0202, 0.0233, 0.0204, 0.0000, 0.0254,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0195, 0.0000, 0.0298, 0.0000, 0.0000,
         0.0000, 0.0226, 0.0000, 0.0000, 0.0261, 0.0000, 0.0217, 0.0000, 0.0000,
         0.0000, 0.0229, 0.0255, 0.0360, 0.0249, 0.0000, 0.0268, 0.0335, 0.0278,
         0.0257, 0.0229, 0.0000, 0.0000, 0.0205, 0.0215, 0.0000, 0.0202, 0.0000,
         0.0228, 0.0338, 0.0000, 0.0254, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0140, 0.0183, 0.0099, 0.0072, 0.0066, 0.0076, 0.0172, 0.0055, 0.0058,
         0.0148, 0.0133, 0.0150, 0.0113, 0.0153, 0.0067, 0.0067, 0.0091, 0.0077,
         0.0108, 0.0184, 0.0037, 0.0119, 0.0114, 0.0095, 0.0064, 0.0094, 0.0108,
         0.0109, 0.0141, 0.0065, 0.0084, 0.0130, 0.0166, 0.0149, 0.0111, 0.0112,
         0.0113, 0.0115, 0.0089, 0.0335, 0.0109, 0.0166, 0.0047, 0.0087, 0.0121,
         0.0147, 0.0099, 0.0060, 0.0110, 0.0078, 0.0104, 0.0158, 0.0120, 0.0099,
         0.0058, 0.0157, 0.0083, 0.0044, 0.0111, 0.0154, 0.0073, 0.0108, 0.0127,
         0.0079, 0.0106, 0.0097, 0.0230, 0.0083, 0.0122, 0.0065, 0.0213, 0.0078,
         0.0109, 0.0167, 0.0113, 0.0050, 0.0158, 0.0244, 0.0099, 0.0150, 0.0099,
         0.0150, 0.0186, 0.0093, 0.0128, 0.0095, 0.0104]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0234, 0.0305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0287, 0.0000, 0.0000,
         0.0246, 0.0221, 0.0250, 0.0188, 0.0255, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0307, 0.0000, 0.0199, 0.0191, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0235, 0.0000, 0.0000, 0.0217, 0.0277, 0.0249, 0.0186, 0.0186,
         0.0189, 0.0192, 0.0000, 0.0560, 0.0000, 0.0277, 0.0000, 0.0000, 0.0203,
         0.0245, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0264, 0.0200, 0.0000,
         0.0000, 0.0262, 0.0000, 0.0000, 0.0000, 0.0256, 0.0000, 0.0000, 0.0211,
         0.0000, 0.0000, 0.0000, 0.0385, 0.0000, 0.0203, 0.0000, 0.0356, 0.0000,
         0.0000, 0.0278, 0.0189, 0.0000, 0.0264, 0.0406, 0.0000, 0.0251, 0.0000,
         0.0251, 0.0310, 0.0000, 0.0214, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0258, 0.0072, 0.0099, 0.0128, 0.0145, 0.0097, 0.0129, 0.0094, 0.0099,
         0.0102, 0.0187, 0.0106, 0.0137, 0.0061, 0.0119, 0.0092, 0.0078, 0.0106,
         0.0100, 0.0067, 0.0103, 0.0185, 0.0092, 0.0118, 0.0163, 0.0068, 0.0062,
         0.0037, 0.0058, 0.0122, 0.0088, 0.0124, 0.0053, 0.0232, 0.0145, 0.0155,
         0.0101, 0.0249, 0.0047, 0.0161, 0.0170, 0.0072, 0.0198, 0.0131, 0.0159,
         0.0156, 0.0039, 0.0077, 0.0067, 0.0122, 0.0097, 0.0068, 0.0047, 0.0162,
         0.0081, 0.0057, 0.0087, 0.0136, 0.0151, 0.0044, 0.0118, 0.0083, 0.0078,
         0.0128, 0.0111, 0.0237, 0.0135, 0.0195, 0.0154, 0.0170, 0.0073, 0.0096,
         0.0073, 0.0098, 0.0075, 0.0117, 0.0151, 0.0208, 0.0063, 0.0185, 0.0110,
         0.0089, 0.0083, 0.0116, 0.0104, 0.0101, 0.0085]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0434, 0.0000, 0.0000, 0.0216, 0.0244, 0.0000, 0.0217, 0.0000, 0.0000,
         0.0000, 0.0315, 0.0000, 0.0231, 0.0000, 0.0200, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0312, 0.0000, 0.0199, 0.0275, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0206, 0.0000, 0.0209, 0.0000, 0.0390, 0.0244, 0.0261,
         0.0000, 0.0418, 0.0000, 0.0272, 0.0286, 0.0000, 0.0333, 0.0221, 0.0268,
         0.0263, 0.0000, 0.0000, 0.0000, 0.0205, 0.0000, 0.0000, 0.0000, 0.0272,
         0.0000, 0.0000, 0.0000, 0.0230, 0.0255, 0.0000, 0.0199, 0.0000, 0.0000,
         0.0216, 0.0000, 0.0399, 0.0227, 0.0329, 0.0259, 0.0285, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0196, 0.0255, 0.0350, 0.0000, 0.0312, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0124, 0.0170, 0.0102, 0.0109, 0.0201, 0.0177, 0.0120, 0.0076, 0.0066,
         0.0080, 0.0094, 0.0106, 0.0077, 0.0072, 0.0091, 0.0075, 0.0143, 0.0302,
         0.0112, 0.0127, 0.0129, 0.0121, 0.0078, 0.0100, 0.0061, 0.0213, 0.0176,
         0.0075, 0.0078, 0.0126, 0.0059, 0.0210, 0.0068, 0.0145, 0.0108, 0.0104,
         0.0090, 0.0130, 0.0086, 0.0078, 0.0203, 0.0102, 0.0146, 0.0091, 0.0064,
         0.0114, 0.0079, 0.0131, 0.0139, 0.0192, 0.0140, 0.0077, 0.0102, 0.0108,
         0.0096, 0.0138, 0.0078, 0.0104, 0.0124, 0.0101, 0.0161, 0.0150, 0.0126,
         0.0078, 0.0135, 0.0107, 0.0060, 0.0104, 0.0181, 0.0091, 0.0072, 0.0174,
         0.0164, 0.0056, 0.0120, 0.0069, 0.0114, 0.0058, 0.0125, 0.0174, 0.0062,
         0.0069, 0.0185, 0.0071, 0.0193, 0.0057, 0.0051]], device='cuda:0')
Sum of probabilities per row: tensor([1.0000], device='cuda:0')
Probabilities after top-p: tensor([[0.0208, 0.0285, 0.0000, 0.0000, 0.0339, 0.0297, 0.0202, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0240, 0.0509,
         0.0000, 0.0213, 0.0217, 0.0204, 0.0000, 0.0000, 0.0000, 0.0359, 0.0296,
         0.0000, 0.0000, 0.0212, 0.0000, 0.0354, 0.0000, 0.0245, 0.0000, 0.0000,
         0.0000, 0.0219, 0.0000, 0.0000, 0.0342, 0.0000, 0.0245, 0.0000, 0.0000,
         0.0192, 0.0000, 0.0220, 0.0234, 0.0324, 0.0236, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0232, 0.0000, 0.0000, 0.0208, 0.0000, 0.0271, 0.0252, 0.0213,
         0.0000, 0.0227, 0.0000, 0.0000, 0.0000, 0.0305, 0.0000, 0.0000, 0.0293,
         0.0275, 0.0000, 0.0201, 0.0000, 0.0192, 0.0000, 0.0210, 0.0293, 0.0000,
         0.0000, 0.0312, 0.0000, 0.0325, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0202, 0.0152, 0.0097, 0.0050, 0.0061, 0.0132, 0.0137, 0.0067, 0.0116,
         0.0061, 0.0117, 0.0156, 0.0097, 0.0144, 0.0079, 0.0069, 0.0158, 0.0131,
         0.0090, 0.0117, 0.0080, 0.0064, 0.0115, 0.0119, 0.0062, 0.0081, 0.0138,
         0.0101, 0.0120, 0.0101, 0.0093, 0.0103, 0.0048, 0.0176, 0.0225, 0.0182,
         0.0061, 0.0174, 0.0081, 0.0199, 0.0124, 0.0132, 0.0139, 0.0095, 0.0114,
         0.0165, 0.0108, 0.0056, 0.0125, 0.0131, 0.0104, 0.0140, 0.0077, 0.0096,
         0.0083, 0.0094, 0.0080, 0.0043, 0.0078, 0.0126, 0.0162, 0.0077, 0.0076,
         0.0075, 0.0180, 0.0163, 0.0165, 0.0098, 0.0108, 0.0127, 0.0141, 0.0198,
         0.0108, 0.0131, 0.0128, 0.0093, 0.0154, 0.0171, 0.0107, 0.0086, 0.0080,
         0.0139, 0.0150, 0.0061, 0.0142, 0.0075, 0.0139]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0341, 0.0258, 0.0000, 0.0000, 0.0000, 0.0223, 0.0232, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0264, 0.0000, 0.0243, 0.0000, 0.0000, 0.0267, 0.0221,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0201, 0.0000, 0.0000, 0.0233,
         0.0000, 0.0203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0297, 0.0380, 0.0308,
         0.0000, 0.0293, 0.0000, 0.0337, 0.0209, 0.0223, 0.0234, 0.0000, 0.0000,
         0.0278, 0.0000, 0.0000, 0.0212, 0.0221, 0.0000, 0.0237, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0212, 0.0274, 0.0000, 0.0000,
         0.0000, 0.0304, 0.0276, 0.0278, 0.0000, 0.0000, 0.0214, 0.0239, 0.0335,
         0.0000, 0.0222, 0.0217, 0.0000, 0.0260, 0.0289, 0.0000, 0.0000, 0.0000,
         0.0235, 0.0253, 0.0000, 0.0241, 0.0000, 0.0234]], device='cuda:0')
Probabilities after softmax: tensor([[0.0198, 0.0084, 0.0166, 0.0076, 0.0106, 0.0108, 0.0166, 0.0072, 0.0112,
         0.0127, 0.0112, 0.0130, 0.0096, 0.0076, 0.0125, 0.0040, 0.0071, 0.0207,
         0.0188, 0.0071, 0.0094, 0.0072, 0.0081, 0.0104, 0.0051, 0.0114, 0.0129,
         0.0087, 0.0079, 0.0064, 0.0081, 0.0088, 0.0070, 0.0225, 0.0075, 0.0111,
         0.0095, 0.0188, 0.0078, 0.0323, 0.0153, 0.0091, 0.0043, 0.0099, 0.0086,
         0.0094, 0.0087, 0.0110, 0.0128, 0.0149, 0.0223, 0.0116, 0.0151, 0.0153,
         0.0102, 0.0126, 0.0108, 0.0050, 0.0180, 0.0062, 0.0127, 0.0119, 0.0064,
         0.0093, 0.0130, 0.0140, 0.0095, 0.0138, 0.0197, 0.0069, 0.0093, 0.0138,
         0.0155, 0.0106, 0.0104, 0.0151, 0.0119, 0.0149, 0.0100, 0.0105, 0.0098,
         0.0148, 0.0098, 0.0134, 0.0060, 0.0123, 0.0099]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0331, 0.0000, 0.0278, 0.0000, 0.0000, 0.0000, 0.0278, 0.0000, 0.0188,
         0.0212, 0.0188, 0.0218, 0.0000, 0.0000, 0.0209, 0.0000, 0.0000, 0.0347,
         0.0316, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0191, 0.0215,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0376, 0.0000, 0.0186,
         0.0000, 0.0315, 0.0000, 0.0541, 0.0256, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0215, 0.0249, 0.0374, 0.0194, 0.0254, 0.0257,
         0.0000, 0.0212, 0.0000, 0.0000, 0.0302, 0.0000, 0.0213, 0.0200, 0.0000,
         0.0000, 0.0218, 0.0235, 0.0000, 0.0231, 0.0329, 0.0000, 0.0000, 0.0232,
         0.0260, 0.0000, 0.0000, 0.0253, 0.0199, 0.0250, 0.0000, 0.0000, 0.0000,
         0.0248, 0.0000, 0.0224, 0.0000, 0.0206, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0174, 0.0113, 0.0187, 0.0109, 0.0104, 0.0117, 0.0145, 0.0070, 0.0113,
         0.0063, 0.0178, 0.0095, 0.0105, 0.0133, 0.0093, 0.0101, 0.0094, 0.0128,
         0.0044, 0.0075, 0.0086, 0.0112, 0.0147, 0.0098, 0.0069, 0.0226, 0.0147,
         0.0061, 0.0091, 0.0133, 0.0079, 0.0072, 0.0074, 0.0173, 0.0128, 0.0146,
         0.0080, 0.0175, 0.0038, 0.0275, 0.0293, 0.0134, 0.0091, 0.0065, 0.0095,
         0.0162, 0.0085, 0.0117, 0.0092, 0.0070, 0.0146, 0.0071, 0.0099, 0.0168,
         0.0057, 0.0149, 0.0093, 0.0061, 0.0131, 0.0102, 0.0162, 0.0122, 0.0074,
         0.0115, 0.0088, 0.0120, 0.0086, 0.0125, 0.0131, 0.0098, 0.0065, 0.0115,
         0.0094, 0.0126, 0.0086, 0.0103, 0.0177, 0.0107, 0.0108, 0.0132, 0.0120,
         0.0136, 0.0130, 0.0074, 0.0153, 0.0054, 0.0164]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0293, 0.0000, 0.0314, 0.0000, 0.0000, 0.0196, 0.0244, 0.0000, 0.0000,
         0.0000, 0.0299, 0.0000, 0.0000, 0.0224, 0.0000, 0.0000, 0.0000, 0.0215,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0248, 0.0000, 0.0000, 0.0380, 0.0247,
         0.0000, 0.0000, 0.0223, 0.0000, 0.0000, 0.0000, 0.0292, 0.0216, 0.0245,
         0.0000, 0.0294, 0.0000, 0.0462, 0.0494, 0.0226, 0.0000, 0.0000, 0.0000,
         0.0272, 0.0000, 0.0197, 0.0000, 0.0000, 0.0246, 0.0000, 0.0000, 0.0283,
         0.0000, 0.0252, 0.0000, 0.0000, 0.0220, 0.0000, 0.0273, 0.0205, 0.0000,
         0.0194, 0.0000, 0.0202, 0.0000, 0.0211, 0.0221, 0.0000, 0.0000, 0.0194,
         0.0000, 0.0213, 0.0000, 0.0000, 0.0298, 0.0000, 0.0000, 0.0222, 0.0202,
         0.0229, 0.0219, 0.0000, 0.0257, 0.0000, 0.0277]], device='cuda:0')
Probabilities after softmax: tensor([[0.0117, 0.0075, 0.0133, 0.0086, 0.0244, 0.0132, 0.0154, 0.0095, 0.0065,
         0.0073, 0.0221, 0.0298, 0.0071, 0.0138, 0.0064, 0.0043, 0.0106, 0.0132,
         0.0087, 0.0082, 0.0057, 0.0117, 0.0056, 0.0074, 0.0067, 0.0103, 0.0137,
         0.0046, 0.0174, 0.0078, 0.0107, 0.0182, 0.0078, 0.0070, 0.0125, 0.0134,
         0.0129, 0.0205, 0.0093, 0.0219, 0.0164, 0.0125, 0.0082, 0.0071, 0.0141,
         0.0127, 0.0131, 0.0059, 0.0101, 0.0172, 0.0073, 0.0161, 0.0094, 0.0129,
         0.0099, 0.0129, 0.0088, 0.0126, 0.0118, 0.0045, 0.0135, 0.0100, 0.0078,
         0.0076, 0.0090, 0.0132, 0.0113, 0.0067, 0.0142, 0.0167, 0.0070, 0.0090,
         0.0095, 0.0112, 0.0099, 0.0056, 0.0146, 0.0209, 0.0091, 0.0069, 0.0112,
         0.0080, 0.0143, 0.0149, 0.0193, 0.0065, 0.0222]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0000, 0.0000, 0.0224, 0.0000, 0.0413, 0.0224, 0.0260, 0.0000, 0.0000,
         0.0000, 0.0373, 0.0504, 0.0000, 0.0233, 0.0000, 0.0000, 0.0000, 0.0222,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0232,
         0.0000, 0.0295, 0.0000, 0.0000, 0.0307, 0.0000, 0.0000, 0.0211, 0.0227,
         0.0219, 0.0346, 0.0000, 0.0370, 0.0278, 0.0211, 0.0000, 0.0000, 0.0238,
         0.0214, 0.0221, 0.0000, 0.0000, 0.0291, 0.0000, 0.0272, 0.0000, 0.0218,
         0.0000, 0.0219, 0.0000, 0.0212, 0.0200, 0.0000, 0.0228, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0223, 0.0000, 0.0000, 0.0240, 0.0282, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0247, 0.0353, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0241, 0.0252, 0.0327, 0.0000, 0.0375]], device='cuda:0')
Probabilities after softmax: tensor([[0.0247, 0.0179, 0.0154, 0.0033, 0.0091, 0.0121, 0.0101, 0.0063, 0.0113,
         0.0103, 0.0141, 0.0167, 0.0118, 0.0130, 0.0073, 0.0038, 0.0114, 0.0107,
         0.0096, 0.0199, 0.0125, 0.0100, 0.0077, 0.0152, 0.0073, 0.0092, 0.0105,
         0.0141, 0.0074, 0.0068, 0.0070, 0.0115, 0.0073, 0.0149, 0.0214, 0.0126,
         0.0084, 0.0105, 0.0124, 0.0138, 0.0144, 0.0065, 0.0115, 0.0103, 0.0127,
         0.0121, 0.0071, 0.0121, 0.0078, 0.0097, 0.0111, 0.0134, 0.0061, 0.0132,
         0.0140, 0.0094, 0.0086, 0.0105, 0.0122, 0.0102, 0.0116, 0.0073, 0.0070,
         0.0068, 0.0194, 0.0152, 0.0137, 0.0113, 0.0091, 0.0099, 0.0114, 0.0096,
         0.0131, 0.0140, 0.0107, 0.0111, 0.0179, 0.0148, 0.0064, 0.0143, 0.0129,
         0.0115, 0.0131, 0.0086, 0.0156, 0.0101, 0.0213]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0413, 0.0299, 0.0258, 0.0000, 0.0000, 0.0202, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0236, 0.0280, 0.0198, 0.0217, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0333, 0.0209, 0.0000, 0.0000, 0.0255, 0.0000, 0.0000, 0.0000,
         0.0236, 0.0000, 0.0000, 0.0000, 0.0192, 0.0000, 0.0249, 0.0358, 0.0211,
         0.0000, 0.0000, 0.0207, 0.0230, 0.0241, 0.0000, 0.0192, 0.0000, 0.0213,
         0.0202, 0.0000, 0.0203, 0.0000, 0.0000, 0.0000, 0.0224, 0.0000, 0.0220,
         0.0234, 0.0000, 0.0000, 0.0000, 0.0203, 0.0000, 0.0194, 0.0000, 0.0000,
         0.0000, 0.0325, 0.0254, 0.0229, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0219, 0.0234, 0.0000, 0.0000, 0.0299, 0.0248, 0.0000, 0.0239, 0.0215,
         0.0192, 0.0219, 0.0000, 0.0260, 0.0000, 0.0356]], device='cuda:0')
Probabilities after softmax: tensor([[0.0166, 0.0114, 0.0119, 0.0114, 0.0115, 0.0107, 0.0118, 0.0090, 0.0125,
         0.0050, 0.0124, 0.0199, 0.0102, 0.0095, 0.0042, 0.0042, 0.0068, 0.0263,
         0.0068, 0.0184, 0.0077, 0.0105, 0.0099, 0.0129, 0.0087, 0.0078, 0.0078,
         0.0068, 0.0104, 0.0110, 0.0151, 0.0196, 0.0030, 0.0107, 0.0111, 0.0147,
         0.0094, 0.0288, 0.0067, 0.0080, 0.0278, 0.0106, 0.0087, 0.0085, 0.0087,
         0.0141, 0.0100, 0.0051, 0.0085, 0.0101, 0.0066, 0.0136, 0.0089, 0.0166,
         0.0055, 0.0084, 0.0065, 0.0088, 0.0196, 0.0066, 0.0081, 0.0145, 0.0192,
         0.0083, 0.0180, 0.0143, 0.0116, 0.0090, 0.0129, 0.0064, 0.0141, 0.0150,
         0.0121, 0.0148, 0.0159, 0.0096, 0.0202, 0.0181, 0.0062, 0.0133, 0.0077,
         0.0079, 0.0120, 0.0072, 0.0239, 0.0044, 0.0111]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0279, 0.0190, 0.0200, 0.0191, 0.0193, 0.0000, 0.0198, 0.0000, 0.0209,
         0.0000, 0.0208, 0.0333, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0440,
         0.0000, 0.0309, 0.0000, 0.0000, 0.0000, 0.0217, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0253, 0.0329, 0.0000, 0.0000, 0.0000, 0.0247,
         0.0000, 0.0482, 0.0000, 0.0000, 0.0465, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0236, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0229, 0.0000, 0.0278,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0328, 0.0000, 0.0000, 0.0244, 0.0321,
         0.0000, 0.0302, 0.0240, 0.0195, 0.0000, 0.0216, 0.0000, 0.0236, 0.0251,
         0.0202, 0.0249, 0.0266, 0.0000, 0.0339, 0.0303, 0.0000, 0.0223, 0.0000,
         0.0000, 0.0200, 0.0000, 0.0401, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0116, 0.0064, 0.0163, 0.0060, 0.0141, 0.0134, 0.0165, 0.0124, 0.0120,
         0.0085, 0.0092, 0.0092, 0.0180, 0.0108, 0.0088, 0.0044, 0.0094, 0.0096,
         0.0085, 0.0143, 0.0064, 0.0122, 0.0084, 0.0074, 0.0045, 0.0094, 0.0089,
         0.0112, 0.0118, 0.0167, 0.0108, 0.0251, 0.0127, 0.0129, 0.0140, 0.0084,
         0.0179, 0.0130, 0.0117, 0.0101, 0.0099, 0.0183, 0.0149, 0.0121, 0.0086,
         0.0138, 0.0060, 0.0072, 0.0149, 0.0067, 0.0148, 0.0180, 0.0065, 0.0142,
         0.0086, 0.0103, 0.0057, 0.0135, 0.0126, 0.0140, 0.0038, 0.0083, 0.0117,
         0.0106, 0.0090, 0.0076, 0.0136, 0.0107, 0.0145, 0.0057, 0.0101, 0.0272,
         0.0090, 0.0144, 0.0062, 0.0102, 0.0133, 0.0160, 0.0108, 0.0178, 0.0168,
         0.0095, 0.0134, 0.0092, 0.0203, 0.0038, 0.0130]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0000, 0.0000, 0.0274, 0.0000, 0.0236, 0.0226, 0.0277, 0.0208, 0.0201,
         0.0000, 0.0000, 0.0000, 0.0303, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0240, 0.0000, 0.0206, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0199, 0.0281, 0.0000, 0.0422, 0.0214, 0.0218, 0.0235, 0.0000,
         0.0300, 0.0218, 0.0000, 0.0000, 0.0000, 0.0307, 0.0250, 0.0203, 0.0000,
         0.0232, 0.0000, 0.0000, 0.0250, 0.0000, 0.0250, 0.0302, 0.0000, 0.0239,
         0.0000, 0.0000, 0.0000, 0.0228, 0.0212, 0.0236, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0229, 0.0000, 0.0244, 0.0000, 0.0000, 0.0457,
         0.0000, 0.0242, 0.0000, 0.0000, 0.0224, 0.0269, 0.0000, 0.0299, 0.0283,
         0.0000, 0.0225, 0.0000, 0.0341, 0.0000, 0.0219]], device='cuda:0')
Probabilities after softmax: tensor([[0.0199, 0.0077, 0.0173, 0.0109, 0.0113, 0.0127, 0.0117, 0.0144, 0.0101,
         0.0134, 0.0086, 0.0149, 0.0144, 0.0144, 0.0093, 0.0075, 0.0068, 0.0114,
         0.0109, 0.0105, 0.0067, 0.0100, 0.0109, 0.0075, 0.0184, 0.0120, 0.0092,
         0.0076, 0.0113, 0.0189, 0.0170, 0.0056, 0.0102, 0.0147, 0.0088, 0.0120,
         0.0105, 0.0219, 0.0066, 0.0150, 0.0142, 0.0108, 0.0081, 0.0133, 0.0115,
         0.0094, 0.0102, 0.0045, 0.0081, 0.0194, 0.0096, 0.0065, 0.0078, 0.0081,
         0.0165, 0.0092, 0.0123, 0.0106, 0.0169, 0.0091, 0.0151, 0.0083, 0.0122,
         0.0075, 0.0120, 0.0144, 0.0142, 0.0061, 0.0122, 0.0095, 0.0070, 0.0152,
         0.0120, 0.0153, 0.0141, 0.0052, 0.0108, 0.0094, 0.0141, 0.0130, 0.0065,
         0.0217, 0.0081, 0.0104, 0.0099, 0.0056, 0.0215]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0334, 0.0000, 0.0290, 0.0000, 0.0190, 0.0213, 0.0195, 0.0242, 0.0000,
         0.0225, 0.0000, 0.0249, 0.0242, 0.0241, 0.0000, 0.0000, 0.0000, 0.0191,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0309, 0.0202, 0.0000,
         0.0000, 0.0000, 0.0317, 0.0286, 0.0000, 0.0000, 0.0246, 0.0000, 0.0201,
         0.0000, 0.0367, 0.0000, 0.0252, 0.0238, 0.0000, 0.0000, 0.0223, 0.0192,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0325, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0276, 0.0000, 0.0206, 0.0000, 0.0283, 0.0000, 0.0253, 0.0000, 0.0204,
         0.0000, 0.0201, 0.0241, 0.0237, 0.0000, 0.0204, 0.0000, 0.0000, 0.0255,
         0.0202, 0.0256, 0.0237, 0.0000, 0.0000, 0.0000, 0.0237, 0.0218, 0.0000,
         0.0363, 0.0000, 0.0000, 0.0000, 0.0000, 0.0360]], device='cuda:0')
Probabilities after softmax: tensor([[0.0161, 0.0175, 0.0144, 0.0039, 0.0067, 0.0129, 0.0099, 0.0056, 0.0071,
         0.0110, 0.0183, 0.0157, 0.0135, 0.0152, 0.0099, 0.0065, 0.0154, 0.0105,
         0.0124, 0.0117, 0.0087, 0.0106, 0.0061, 0.0139, 0.0079, 0.0119, 0.0089,
         0.0105, 0.0077, 0.0041, 0.0063, 0.0097, 0.0118, 0.0101, 0.0246, 0.0122,
         0.0104, 0.0091, 0.0190, 0.0136, 0.0129, 0.0107, 0.0104, 0.0088, 0.0117,
         0.0123, 0.0090, 0.0102, 0.0085, 0.0075, 0.0186, 0.0089, 0.0085, 0.0117,
         0.0153, 0.0086, 0.0113, 0.0079, 0.0101, 0.0083, 0.0119, 0.0063, 0.0087,
         0.0077, 0.0186, 0.0125, 0.0150, 0.0153, 0.0076, 0.0087, 0.0142, 0.0135,
         0.0151, 0.0106, 0.0105, 0.0088, 0.0233, 0.0150, 0.0109, 0.0115, 0.0136,
         0.0121, 0.0145, 0.0095, 0.0110, 0.0085, 0.0224]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0272, 0.0295, 0.0244, 0.0000, 0.0000, 0.0218, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0309, 0.0266, 0.0229, 0.0257, 0.0000, 0.0000, 0.0259, 0.0000,
         0.0209, 0.0198, 0.0000, 0.0000, 0.0000, 0.0234, 0.0000, 0.0201, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0200, 0.0000, 0.0415, 0.0206,
         0.0000, 0.0000, 0.0320, 0.0229, 0.0217, 0.0000, 0.0000, 0.0000, 0.0197,
         0.0208, 0.0000, 0.0000, 0.0000, 0.0000, 0.0314, 0.0000, 0.0000, 0.0198,
         0.0259, 0.0000, 0.0192, 0.0000, 0.0000, 0.0000, 0.0201, 0.0000, 0.0000,
         0.0000, 0.0313, 0.0211, 0.0253, 0.0259, 0.0000, 0.0000, 0.0239, 0.0228,
         0.0255, 0.0000, 0.0000, 0.0000, 0.0394, 0.0254, 0.0000, 0.0193, 0.0229,
         0.0204, 0.0245, 0.0000, 0.0000, 0.0000, 0.0378]], device='cuda:0')
Probabilities after softmax: tensor([[0.0186, 0.0157, 0.0096, 0.0132, 0.0304, 0.0146, 0.0111, 0.0103, 0.0095,
         0.0071, 0.0110, 0.0128, 0.0109, 0.0087, 0.0053, 0.0059, 0.0117, 0.0079,
         0.0108, 0.0119, 0.0078, 0.0083, 0.0147, 0.0099, 0.0083, 0.0062, 0.0093,
         0.0122, 0.0201, 0.0068, 0.0109, 0.0239, 0.0068, 0.0093, 0.0181, 0.0101,
         0.0124, 0.0176, 0.0135, 0.0069, 0.0058, 0.0100, 0.0154, 0.0107, 0.0212,
         0.0111, 0.0111, 0.0156, 0.0077, 0.0100, 0.0073, 0.0201, 0.0085, 0.0084,
         0.0106, 0.0103, 0.0068, 0.0101, 0.0070, 0.0132, 0.0086, 0.0114, 0.0119,
         0.0086, 0.0152, 0.0106, 0.0153, 0.0071, 0.0081, 0.0099, 0.0101, 0.0137,
         0.0088, 0.0147, 0.0060, 0.0099, 0.0138, 0.0138, 0.0095, 0.0103, 0.0098,
         0.0147, 0.0142, 0.0172, 0.0189, 0.0073, 0.0096]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0311, 0.0262, 0.0000, 0.0220, 0.0507, 0.0244, 0.0185, 0.0000, 0.0000,
         0.0000, 0.0183, 0.0214, 0.0182, 0.0000, 0.0000, 0.0000, 0.0195, 0.0000,
         0.0181, 0.0199, 0.0000, 0.0000, 0.0245, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0204, 0.0336, 0.0000, 0.0182, 0.0399, 0.0000, 0.0000, 0.0303, 0.0000,
         0.0208, 0.0294, 0.0226, 0.0000, 0.0000, 0.0000, 0.0258, 0.0000, 0.0354,
         0.0186, 0.0185, 0.0261, 0.0000, 0.0000, 0.0000, 0.0336, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0221, 0.0000, 0.0191, 0.0198,
         0.0000, 0.0253, 0.0000, 0.0256, 0.0000, 0.0000, 0.0000, 0.0000, 0.0229,
         0.0000, 0.0245, 0.0000, 0.0000, 0.0230, 0.0231, 0.0000, 0.0000, 0.0000,
         0.0245, 0.0237, 0.0288, 0.0316, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0138, 0.0064, 0.0087, 0.0079, 0.0088, 0.0211, 0.0150, 0.0075, 0.0046,
         0.0057, 0.0189, 0.0102, 0.0153, 0.0083, 0.0066, 0.0084, 0.0099, 0.0238,
         0.0086, 0.0098, 0.0064, 0.0137, 0.0073, 0.0091, 0.0089, 0.0060, 0.0107,
         0.0129, 0.0093, 0.0132, 0.0148, 0.0110, 0.0169, 0.0163, 0.0107, 0.0056,
         0.0103, 0.0163, 0.0055, 0.0184, 0.0135, 0.0145, 0.0207, 0.0198, 0.0134,
         0.0136, 0.0071, 0.0084, 0.0074, 0.0130, 0.0121, 0.0172, 0.0085, 0.0204,
         0.0070, 0.0100, 0.0106, 0.0093, 0.0105, 0.0109, 0.0181, 0.0105, 0.0143,
         0.0075, 0.0105, 0.0123, 0.0071, 0.0055, 0.0123, 0.0138, 0.0056, 0.0145,
         0.0056, 0.0078, 0.0086, 0.0069, 0.0134, 0.0089, 0.0211, 0.0114, 0.0086,
         0.0085, 0.0311, 0.0127, 0.0151, 0.0047, 0.0132]], device='cuda:0')
Sum of probabilities per row: tensor([1.0000], device='cuda:0')
Probabilities after top-p: tensor([[0.0233, 0.0000, 0.0000, 0.0000, 0.0000, 0.0356, 0.0254, 0.0000, 0.0000,
         0.0000, 0.0319, 0.0000, 0.0258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0402,
         0.0000, 0.0000, 0.0000, 0.0232, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0219, 0.0000, 0.0224, 0.0250, 0.0000, 0.0285, 0.0275, 0.0000, 0.0000,
         0.0000, 0.0275, 0.0000, 0.0311, 0.0228, 0.0245, 0.0351, 0.0335, 0.0227,
         0.0230, 0.0000, 0.0000, 0.0000, 0.0219, 0.0205, 0.0291, 0.0000, 0.0344,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0307, 0.0000, 0.0242,
         0.0000, 0.0000, 0.0209, 0.0000, 0.0000, 0.0208, 0.0233, 0.0000, 0.0244,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0226, 0.0000, 0.0356, 0.0192, 0.0000,
         0.0000, 0.0526, 0.0214, 0.0255, 0.0000, 0.0223]], device='cuda:0')
Probabilities after softmax: tensor([[0.0110, 0.0090, 0.0116, 0.0126, 0.0149, 0.0081, 0.0079, 0.0142, 0.0090,
         0.0072, 0.0182, 0.0150, 0.0101, 0.0160, 0.0145, 0.0123, 0.0163, 0.0076,
         0.0113, 0.0108, 0.0088, 0.0141, 0.0107, 0.0050, 0.0077, 0.0090, 0.0137,
         0.0058, 0.0188, 0.0073, 0.0088, 0.0109, 0.0083, 0.0112, 0.0110, 0.0065,
         0.0225, 0.0102, 0.0104, 0.0170, 0.0140, 0.0142, 0.0129, 0.0081, 0.0148,
         0.0194, 0.0068, 0.0196, 0.0093, 0.0057, 0.0133, 0.0087, 0.0065, 0.0163,
         0.0125, 0.0148, 0.0118, 0.0069, 0.0145, 0.0072, 0.0119, 0.0101, 0.0094,
         0.0122, 0.0124, 0.0092, 0.0142, 0.0102, 0.0144, 0.0128, 0.0144, 0.0164,
         0.0201, 0.0127, 0.0128, 0.0104, 0.0178, 0.0089, 0.0082, 0.0070, 0.0061,
         0.0108, 0.0087, 0.0097, 0.0084, 0.0071, 0.0112]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0000, 0.0000, 0.0196, 0.0213, 0.0252, 0.0000, 0.0000, 0.0240, 0.0000,
         0.0000, 0.0307, 0.0253, 0.0000, 0.0269, 0.0244, 0.0207, 0.0275, 0.0000,
         0.0190, 0.0000, 0.0000, 0.0238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0231,
         0.0000, 0.0317, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0378, 0.0000, 0.0000, 0.0286, 0.0236, 0.0239, 0.0217, 0.0000, 0.0250,
         0.0327, 0.0000, 0.0331, 0.0000, 0.0000, 0.0225, 0.0000, 0.0000, 0.0275,
         0.0211, 0.0249, 0.0199, 0.0000, 0.0245, 0.0000, 0.0201, 0.0000, 0.0000,
         0.0205, 0.0209, 0.0000, 0.0240, 0.0000, 0.0242, 0.0216, 0.0242, 0.0276,
         0.0338, 0.0214, 0.0215, 0.0000, 0.0300, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0182, 0.0064, 0.0087, 0.0057, 0.0065, 0.0119, 0.0064, 0.0159, 0.0112,
         0.0038, 0.0161, 0.0109, 0.0092, 0.0074, 0.0111, 0.0108, 0.0101, 0.0295,
         0.0082, 0.0041, 0.0116, 0.0127, 0.0073, 0.0098, 0.0112, 0.0163, 0.0077,
         0.0100, 0.0144, 0.0057, 0.0102, 0.0093, 0.0050, 0.0116, 0.0115, 0.0105,
         0.0107, 0.0133, 0.0097, 0.0172, 0.0187, 0.0131, 0.0135, 0.0130, 0.0075,
         0.0124, 0.0161, 0.0105, 0.0078, 0.0159, 0.0101, 0.0119, 0.0101, 0.0147,
         0.0075, 0.0065, 0.0127, 0.0083, 0.0109, 0.0202, 0.0266, 0.0135, 0.0084,
         0.0098, 0.0115, 0.0117, 0.0094, 0.0081, 0.0167, 0.0104, 0.0103, 0.0171,
         0.0126, 0.0190, 0.0109, 0.0068, 0.0165, 0.0100, 0.0068, 0.0150, 0.0091,
         0.0148, 0.0107, 0.0149, 0.0084, 0.0048, 0.0165]], device='cuda:0')
Sum of probabilities per row: tensor([1.0000], device='cuda:0')
Probabilities after top-p: tensor([[0.0308, 0.0000, 0.0000, 0.0000, 0.0000, 0.0202, 0.0000, 0.0269, 0.0189,
         0.0000, 0.0272, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0500,
         0.0000, 0.0000, 0.0196, 0.0214, 0.0000, 0.0000, 0.0190, 0.0276, 0.0000,
         0.0000, 0.0244, 0.0000, 0.0000, 0.0000, 0.0000, 0.0196, 0.0195, 0.0000,
         0.0000, 0.0225, 0.0000, 0.0291, 0.0315, 0.0221, 0.0228, 0.0219, 0.0000,
         0.0210, 0.0273, 0.0000, 0.0000, 0.0270, 0.0000, 0.0201, 0.0000, 0.0249,
         0.0000, 0.0000, 0.0215, 0.0000, 0.0000, 0.0341, 0.0450, 0.0228, 0.0000,
         0.0000, 0.0195, 0.0199, 0.0000, 0.0000, 0.0282, 0.0000, 0.0000, 0.0288,
         0.0213, 0.0321, 0.0000, 0.0000, 0.0280, 0.0000, 0.0000, 0.0254, 0.0000,
         0.0250, 0.0000, 0.0253, 0.0000, 0.0000, 0.0278]], device='cuda:0')
Probabilities after softmax: tensor([[0.0101, 0.0042, 0.0113, 0.0180, 0.0054, 0.0210, 0.0123, 0.0054, 0.0072,
         0.0090, 0.0213, 0.0281, 0.0084, 0.0146, 0.0137, 0.0064, 0.0150, 0.0165,
         0.0083, 0.0146, 0.0116, 0.0220, 0.0116, 0.0119, 0.0068, 0.0121, 0.0067,
         0.0075, 0.0110, 0.0032, 0.0086, 0.0111, 0.0084, 0.0150, 0.0103, 0.0110,
         0.0151, 0.0074, 0.0113, 0.0078, 0.0093, 0.0106, 0.0125, 0.0075, 0.0128,
         0.0082, 0.0102, 0.0038, 0.0099, 0.0137, 0.0078, 0.0130, 0.0118, 0.0130,
         0.0126, 0.0088, 0.0111, 0.0117, 0.0116, 0.0090, 0.0093, 0.0044, 0.0152,
         0.0091, 0.0089, 0.0112, 0.0089, 0.0096, 0.0250, 0.0146, 0.0130, 0.0230,
         0.0143, 0.0058, 0.0073, 0.0068, 0.0072, 0.0182, 0.0034, 0.0324, 0.0056,
         0.0086, 0.0126, 0.0146, 0.0207, 0.0047, 0.0154]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0000, 0.0000, 0.0000, 0.0302, 0.0000, 0.0354, 0.0207, 0.0000, 0.0000,
         0.0000, 0.0358, 0.0473, 0.0000, 0.0245, 0.0231, 0.0000, 0.0252, 0.0278,
         0.0000, 0.0245, 0.0196, 0.0371, 0.0195, 0.0200, 0.0000, 0.0203, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0252, 0.0000, 0.0000,
         0.0255, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0210, 0.0000, 0.0216,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0230, 0.0000, 0.0218, 0.0199, 0.0219,
         0.0213, 0.0000, 0.0000, 0.0197, 0.0000, 0.0000, 0.0000, 0.0000, 0.0256,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0420, 0.0246, 0.0219, 0.0386,
         0.0240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0306, 0.0000, 0.0545, 0.0000,
         0.0000, 0.0212, 0.0246, 0.0348, 0.0000, 0.0259]], device='cuda:0')
Probabilities after softmax: tensor([[0.0123, 0.0090, 0.0081, 0.0132, 0.0140, 0.0207, 0.0087, 0.0067, 0.0108,
         0.0029, 0.0085, 0.0103, 0.0207, 0.0076, 0.0098, 0.0042, 0.0102, 0.0193,
         0.0079, 0.0109, 0.0067, 0.0148, 0.0088, 0.0120, 0.0110, 0.0146, 0.0058,
         0.0062, 0.0070, 0.0069, 0.0069, 0.0165, 0.0061, 0.0097, 0.0148, 0.0092,
         0.0094, 0.0147, 0.0158, 0.0052, 0.0108, 0.0169, 0.0150, 0.0080, 0.0113,
         0.0196, 0.0061, 0.0072, 0.0159, 0.0154, 0.0083, 0.0137, 0.0085, 0.0069,
         0.0103, 0.0102, 0.0093, 0.0078, 0.0135, 0.0061, 0.0110, 0.0084, 0.0144,
         0.0076, 0.0151, 0.0163, 0.0077, 0.0088, 0.0116, 0.0197, 0.0157, 0.0161,
         0.0086, 0.0115, 0.0127, 0.0113, 0.0176, 0.0164, 0.0106, 0.0256, 0.0074,
         0.0068, 0.0281, 0.0099, 0.0212, 0.0042, 0.0167]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0208, 0.0000, 0.0000, 0.0223, 0.0235, 0.0349, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0324,
         0.0000, 0.0000, 0.0000, 0.0250, 0.0000, 0.0201, 0.0000, 0.0246, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0277, 0.0000, 0.0000, 0.0248, 0.0000,
         0.0000, 0.0247, 0.0266, 0.0000, 0.0000, 0.0284, 0.0252, 0.0000, 0.0190,
         0.0330, 0.0000, 0.0000, 0.0267, 0.0259, 0.0000, 0.0229, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0227, 0.0000, 0.0000, 0.0000, 0.0243,
         0.0000, 0.0254, 0.0273, 0.0000, 0.0000, 0.0195, 0.0332, 0.0265, 0.0271,
         0.0000, 0.0194, 0.0213, 0.0190, 0.0296, 0.0276, 0.0000, 0.0430, 0.0000,
         0.0000, 0.0473, 0.0000, 0.0356, 0.0000, 0.0281]], device='cuda:0')
Probabilities after softmax: tensor([[0.0190, 0.0089, 0.0088, 0.0100, 0.0156, 0.0165, 0.0098, 0.0127, 0.0063,
         0.0064, 0.0102, 0.0088, 0.0090, 0.0093, 0.0092, 0.0056, 0.0112, 0.0202,
         0.0091, 0.0091, 0.0059, 0.0077, 0.0092, 0.0068, 0.0072, 0.0074, 0.0166,
         0.0185, 0.0092, 0.0235, 0.0095, 0.0097, 0.0069, 0.0162, 0.0181, 0.0105,
         0.0079, 0.0102, 0.0073, 0.0103, 0.0327, 0.0087, 0.0154, 0.0176, 0.0080,
         0.0096, 0.0080, 0.0136, 0.0104, 0.0151, 0.0152, 0.0048, 0.0094, 0.0110,
         0.0070, 0.0071, 0.0089, 0.0093, 0.0091, 0.0117, 0.0116, 0.0170, 0.0181,
         0.0095, 0.0168, 0.0136, 0.0126, 0.0107, 0.0147, 0.0102, 0.0132, 0.0131,
         0.0066, 0.0188, 0.0211, 0.0074, 0.0101, 0.0125, 0.0129, 0.0121, 0.0071,
         0.0124, 0.0091, 0.0100, 0.0091, 0.0125, 0.0104]], device='cuda:0')
Sum of probabilities per row: tensor([1.0000], device='cuda:0')
Probabilities after top-p: tensor([[0.0319, 0.0000, 0.0000, 0.0000, 0.0262, 0.0277, 0.0000, 0.0213, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0188, 0.0340,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0279,
         0.0310, 0.0000, 0.0395, 0.0000, 0.0000, 0.0000, 0.0272, 0.0303, 0.0177,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0550, 0.0000, 0.0259, 0.0295, 0.0000,
         0.0000, 0.0000, 0.0228, 0.0175, 0.0254, 0.0255, 0.0000, 0.0000, 0.0184,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0196, 0.0195, 0.0285, 0.0304,
         0.0000, 0.0282, 0.0229, 0.0211, 0.0180, 0.0247, 0.0000, 0.0221, 0.0221,
         0.0000, 0.0316, 0.0354, 0.0000, 0.0000, 0.0210, 0.0217, 0.0204, 0.0000,
         0.0208, 0.0000, 0.0000, 0.0000, 0.0210, 0.0175]], device='cuda:0')
Probabilities after softmax: tensor([[0.0062, 0.0055, 0.0136, 0.0119, 0.0373, 0.0126, 0.0159, 0.0137, 0.0108,
         0.0056, 0.0068, 0.0047, 0.0193, 0.0117, 0.0058, 0.0050, 0.0053, 0.0096,
         0.0043, 0.0099, 0.0053, 0.0070, 0.0137, 0.0044, 0.0062, 0.0175, 0.0093,
         0.0114, 0.0115, 0.0131, 0.0133, 0.0135, 0.0129, 0.0108, 0.0131, 0.0145,
         0.0126, 0.0091, 0.0099, 0.0119, 0.0163, 0.0121, 0.0220, 0.0136, 0.0088,
         0.0141, 0.0081, 0.0060, 0.0247, 0.0141, 0.0108, 0.0246, 0.0119, 0.0075,
         0.0076, 0.0114, 0.0111, 0.0167, 0.0218, 0.0078, 0.0132, 0.0154, 0.0093,
         0.0097, 0.0090, 0.0113, 0.0099, 0.0092, 0.0098, 0.0137, 0.0045, 0.0176,
         0.0064, 0.0106, 0.0112, 0.0082, 0.0111, 0.0213, 0.0102, 0.0098, 0.0104,
         0.0073, 0.0104, 0.0089, 0.0157, 0.0061, 0.0130]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0000, 0.0000, 0.0228, 0.0200, 0.0625, 0.0211, 0.0267, 0.0229, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0323, 0.0196, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0229, 0.0000, 0.0000, 0.0293, 0.0000,
         0.0192, 0.0193, 0.0219, 0.0223, 0.0226, 0.0216, 0.0000, 0.0220, 0.0244,
         0.0211, 0.0000, 0.0000, 0.0200, 0.0273, 0.0203, 0.0369, 0.0229, 0.0000,
         0.0236, 0.0000, 0.0000, 0.0414, 0.0236, 0.0000, 0.0412, 0.0199, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0280, 0.0366, 0.0000, 0.0221, 0.0258, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0229, 0.0000, 0.0296,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0356, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0263, 0.0000, 0.0218]], device='cuda:0')
Probabilities after softmax: tensor([[0.0315, 0.0100, 0.0073, 0.0120, 0.0108, 0.0159, 0.0088, 0.0072, 0.0152,
         0.0086, 0.0082, 0.0196, 0.0114, 0.0097, 0.0056, 0.0071, 0.0137, 0.0134,
         0.0072, 0.0074, 0.0095, 0.0086, 0.0082, 0.0128, 0.0077, 0.0124, 0.0103,
         0.0149, 0.0115, 0.0068, 0.0089, 0.0098, 0.0106, 0.0131, 0.0092, 0.0096,
         0.0170, 0.0104, 0.0048, 0.0058, 0.0045, 0.0047, 0.0114, 0.0072, 0.0140,
         0.0226, 0.0079, 0.0261, 0.0158, 0.0080, 0.0082, 0.0100, 0.0074, 0.0216,
         0.0112, 0.0110, 0.0071, 0.0131, 0.0113, 0.0159, 0.0078, 0.0083, 0.0197,
         0.0142, 0.0094, 0.0114, 0.0094, 0.0082, 0.0077, 0.0296, 0.0088, 0.0151,
         0.0112, 0.0090, 0.0098, 0.0066, 0.0099, 0.0054, 0.0096, 0.0128, 0.0093,
         0.0067, 0.0273, 0.0077, 0.0271, 0.0102, 0.0165]], device='cuda:0')
Sum of probabilities per row: tensor([1.0000], device='cuda:0')
Probabilities after top-p: tensor([[0.0529, 0.0000, 0.0000, 0.0202, 0.0181, 0.0267, 0.0000, 0.0000, 0.0255,
         0.0000, 0.0000, 0.0330, 0.0192, 0.0000, 0.0000, 0.0000, 0.0230, 0.0226,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0216, 0.0000, 0.0209, 0.0000,
         0.0251, 0.0194, 0.0000, 0.0000, 0.0000, 0.0178, 0.0221, 0.0000, 0.0000,
         0.0286, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0191, 0.0000, 0.0236,
         0.0380, 0.0000, 0.0438, 0.0266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0364,
         0.0188, 0.0185, 0.0000, 0.0221, 0.0190, 0.0267, 0.0000, 0.0000, 0.0331,
         0.0240, 0.0000, 0.0192, 0.0000, 0.0000, 0.0000, 0.0497, 0.0000, 0.0254,
         0.0189, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0215, 0.0000,
         0.0000, 0.0459, 0.0000, 0.0456, 0.0000, 0.0277]], device='cuda:0')
Probabilities after softmax: tensor([[0.0122, 0.0094, 0.0103, 0.0234, 0.0162, 0.0113, 0.0095, 0.0108, 0.0087,
         0.0151, 0.0063, 0.0146, 0.0076, 0.0131, 0.0076, 0.0143, 0.0179, 0.0123,
         0.0053, 0.0091, 0.0086, 0.0158, 0.0072, 0.0121, 0.0148, 0.0114, 0.0098,
         0.0084, 0.0213, 0.0146, 0.0157, 0.0134, 0.0145, 0.0066, 0.0091, 0.0085,
         0.0124, 0.0128, 0.0081, 0.0055, 0.0143, 0.0077, 0.0096, 0.0059, 0.0195,
         0.0127, 0.0156, 0.0133, 0.0050, 0.0090, 0.0112, 0.0065, 0.0088, 0.0174,
         0.0140, 0.0086, 0.0054, 0.0152, 0.0091, 0.0132, 0.0151, 0.0145, 0.0112,
         0.0085, 0.0105, 0.0056, 0.0025, 0.0086, 0.0186, 0.0061, 0.0043, 0.0158,
         0.0078, 0.0098, 0.0084, 0.0034, 0.0121, 0.0138, 0.0153, 0.0185, 0.0057,
         0.0094, 0.0199, 0.0150, 0.0347, 0.0095, 0.0078]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0206, 0.0000, 0.0000, 0.0396, 0.0275, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0256, 0.0000, 0.0247, 0.0000, 0.0223, 0.0000, 0.0242, 0.0303, 0.0207,
         0.0000, 0.0000, 0.0000, 0.0268, 0.0000, 0.0000, 0.0251, 0.0000, 0.0000,
         0.0000, 0.0361, 0.0248, 0.0266, 0.0227, 0.0246, 0.0000, 0.0000, 0.0000,
         0.0210, 0.0216, 0.0000, 0.0000, 0.0242, 0.0000, 0.0000, 0.0000, 0.0330,
         0.0214, 0.0264, 0.0225, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0295,
         0.0237, 0.0000, 0.0000, 0.0257, 0.0000, 0.0223, 0.0256, 0.0246, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0315, 0.0000, 0.0000, 0.0267,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0233, 0.0259, 0.0313, 0.0000,
         0.0000, 0.0338, 0.0253, 0.0587, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0111, 0.0114, 0.0124, 0.0105, 0.0157, 0.0108, 0.0135, 0.0065, 0.0071,
         0.0109, 0.0157, 0.0243, 0.0096, 0.0119, 0.0086, 0.0104, 0.0175, 0.0162,
         0.0144, 0.0105, 0.0047, 0.0191, 0.0052, 0.0104, 0.0101, 0.0080, 0.0111,
         0.0143, 0.0096, 0.0070, 0.0082, 0.0110, 0.0127, 0.0252, 0.0072, 0.0082,
         0.0085, 0.0079, 0.0071, 0.0186, 0.0142, 0.0127, 0.0054, 0.0220, 0.0098,
         0.0127, 0.0129, 0.0109, 0.0130, 0.0123, 0.0166, 0.0068, 0.0064, 0.0139,
         0.0061, 0.0148, 0.0130, 0.0089, 0.0150, 0.0065, 0.0159, 0.0128, 0.0130,
         0.0063, 0.0130, 0.0083, 0.0137, 0.0102, 0.0147, 0.0086, 0.0090, 0.0077,
         0.0120, 0.0191, 0.0064, 0.0114, 0.0117, 0.0085, 0.0116, 0.0075, 0.0047,
         0.0086, 0.0323, 0.0098, 0.0093, 0.0115, 0.0055]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0000, 0.0191, 0.0208, 0.0000, 0.0263, 0.0000, 0.0227, 0.0000, 0.0000,
         0.0000, 0.0263, 0.0406, 0.0000, 0.0199, 0.0000, 0.0000, 0.0293, 0.0271,
         0.0241, 0.0000, 0.0000, 0.0321, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0213, 0.0421, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0312, 0.0237, 0.0213, 0.0000, 0.0369, 0.0000,
         0.0212, 0.0216, 0.0000, 0.0217, 0.0205, 0.0278, 0.0000, 0.0000, 0.0232,
         0.0000, 0.0247, 0.0218, 0.0000, 0.0252, 0.0000, 0.0266, 0.0215, 0.0218,
         0.0000, 0.0217, 0.0000, 0.0230, 0.0000, 0.0247, 0.0000, 0.0000, 0.0000,
         0.0201, 0.0319, 0.0000, 0.0000, 0.0196, 0.0000, 0.0193, 0.0000, 0.0000,
         0.0000, 0.0540, 0.0000, 0.0000, 0.0193, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0133, 0.0103, 0.0133, 0.0085, 0.0182, 0.0135, 0.0138, 0.0098, 0.0104,
         0.0125, 0.0118, 0.0104, 0.0064, 0.0067, 0.0080, 0.0110, 0.0147, 0.0111,
         0.0125, 0.0074, 0.0146, 0.0127, 0.0105, 0.0065, 0.0112, 0.0125, 0.0079,
         0.0124, 0.0173, 0.0112, 0.0108, 0.0060, 0.0155, 0.0189, 0.0134, 0.0120,
         0.0166, 0.0115, 0.0077, 0.0139, 0.0061, 0.0089, 0.0067, 0.0060, 0.0086,
         0.0127, 0.0077, 0.0126, 0.0056, 0.0104, 0.0130, 0.0083, 0.0097, 0.0105,
         0.0104, 0.0165, 0.0250, 0.0120, 0.0175, 0.0082, 0.0089, 0.0070, 0.0113,
         0.0121, 0.0073, 0.0130, 0.0114, 0.0060, 0.0137, 0.0189, 0.0108, 0.0077,
         0.0130, 0.0071, 0.0155, 0.0117, 0.0104, 0.0144, 0.0122, 0.0092, 0.0148,
         0.0131, 0.0250, 0.0109, 0.0088, 0.0135, 0.0087]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0223, 0.0000, 0.0223, 0.0000, 0.0306, 0.0226, 0.0231, 0.0000, 0.0000,
         0.0211, 0.0199, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0248, 0.0000,
         0.0210, 0.0000, 0.0245, 0.0213, 0.0000, 0.0000, 0.0000, 0.0210, 0.0000,
         0.0208, 0.0291, 0.0000, 0.0000, 0.0000, 0.0261, 0.0318, 0.0225, 0.0202,
         0.0278, 0.0194, 0.0000, 0.0234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0213, 0.0000, 0.0212, 0.0000, 0.0000, 0.0218, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0277, 0.0420, 0.0202, 0.0295, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0203, 0.0000, 0.0219, 0.0000, 0.0000, 0.0230, 0.0318, 0.0000, 0.0000,
         0.0218, 0.0000, 0.0260, 0.0197, 0.0000, 0.0242, 0.0204, 0.0000, 0.0249,
         0.0220, 0.0419, 0.0000, 0.0000, 0.0227, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0122, 0.0084, 0.0132, 0.0098, 0.0107, 0.0208, 0.0156, 0.0043, 0.0059,
         0.0057, 0.0156, 0.0235, 0.0134, 0.0136, 0.0091, 0.0063, 0.0063, 0.0131,
         0.0192, 0.0099, 0.0036, 0.0116, 0.0147, 0.0051, 0.0062, 0.0080, 0.0161,
         0.0049, 0.0203, 0.0123, 0.0141, 0.0135, 0.0066, 0.0138, 0.0099, 0.0119,
         0.0108, 0.0152, 0.0134, 0.0299, 0.0133, 0.0239, 0.0055, 0.0082, 0.0090,
         0.0151, 0.0113, 0.0065, 0.0120, 0.0147, 0.0086, 0.0089, 0.0078, 0.0056,
         0.0138, 0.0179, 0.0082, 0.0117, 0.0072, 0.0053, 0.0148, 0.0117, 0.0088,
         0.0081, 0.0118, 0.0077, 0.0144, 0.0124, 0.0117, 0.0099, 0.0145, 0.0092,
         0.0136, 0.0100, 0.0137, 0.0044, 0.0112, 0.0129, 0.0108, 0.0136, 0.0126,
         0.0101, 0.0085, 0.0167, 0.0135, 0.0087, 0.0116]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0203, 0.0000, 0.0220, 0.0000, 0.0000, 0.0348, 0.0261, 0.0000, 0.0000,
         0.0000, 0.0260, 0.0393, 0.0224, 0.0227, 0.0000, 0.0000, 0.0000, 0.0218,
         0.0321, 0.0000, 0.0000, 0.0000, 0.0245, 0.0000, 0.0000, 0.0000, 0.0268,
         0.0000, 0.0339, 0.0206, 0.0236, 0.0225, 0.0000, 0.0230, 0.0000, 0.0199,
         0.0000, 0.0254, 0.0224, 0.0500, 0.0221, 0.0399, 0.0000, 0.0000, 0.0000,
         0.0252, 0.0000, 0.0000, 0.0200, 0.0246, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0231, 0.0299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0247, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0240, 0.0207, 0.0000, 0.0000, 0.0242, 0.0000,
         0.0227, 0.0000, 0.0230, 0.0000, 0.0000, 0.0216, 0.0000, 0.0228, 0.0210,
         0.0000, 0.0000, 0.0279, 0.0225, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0270, 0.0113, 0.0097, 0.0085, 0.0091, 0.0102, 0.0085, 0.0050, 0.0126,
         0.0063, 0.0176, 0.0124, 0.0132, 0.0075, 0.0100, 0.0096, 0.0208, 0.0151,
         0.0093, 0.0076, 0.0089, 0.0096, 0.0054, 0.0091, 0.0078, 0.0158, 0.0116,
         0.0105, 0.0078, 0.0095, 0.0083, 0.0129, 0.0118, 0.0096, 0.0186, 0.0078,
         0.0123, 0.0074, 0.0120, 0.0097, 0.0118, 0.0112, 0.0221, 0.0039, 0.0126,
         0.0137, 0.0080, 0.0086, 0.0116, 0.0109, 0.0112, 0.0104, 0.0114, 0.0098,
         0.0107, 0.0050, 0.0060, 0.0063, 0.0096, 0.0130, 0.0205, 0.0080, 0.0152,
         0.0101, 0.0193, 0.0134, 0.0051, 0.0118, 0.0120, 0.0064, 0.0141, 0.0163,
         0.0134, 0.0090, 0.0182, 0.0120, 0.0131, 0.0278, 0.0079, 0.0061, 0.0079,
         0.0175, 0.0228, 0.0110, 0.0089, 0.0185, 0.0085]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0452, 0.0188, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0211,
         0.0000, 0.0294, 0.0207, 0.0221, 0.0000, 0.0000, 0.0000, 0.0348, 0.0252,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0264, 0.0194,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0216, 0.0196, 0.0000, 0.0310, 0.0000,
         0.0205, 0.0000, 0.0201, 0.0000, 0.0197, 0.0187, 0.0370, 0.0000, 0.0211,
         0.0229, 0.0000, 0.0000, 0.0193, 0.0000, 0.0000, 0.0000, 0.0190, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0217, 0.0343, 0.0000, 0.0254,
         0.0000, 0.0322, 0.0224, 0.0000, 0.0197, 0.0201, 0.0000, 0.0235, 0.0273,
         0.0224, 0.0000, 0.0304, 0.0201, 0.0219, 0.0465, 0.0000, 0.0000, 0.0000,
         0.0293, 0.0381, 0.0000, 0.0000, 0.0309, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0122, 0.0127, 0.0168, 0.0071, 0.0180, 0.0236, 0.0087, 0.0125, 0.0071,
         0.0116, 0.0076, 0.0076, 0.0061, 0.0087, 0.0054, 0.0056, 0.0139, 0.0178,
         0.0065, 0.0049, 0.0052, 0.0091, 0.0095, 0.0055, 0.0083, 0.0080, 0.0118,
         0.0137, 0.0140, 0.0073, 0.0173, 0.0136, 0.0095, 0.0165, 0.0145, 0.0096,
         0.0093, 0.0090, 0.0093, 0.0152, 0.0144, 0.0222, 0.0057, 0.0137, 0.0096,
         0.0116, 0.0113, 0.0105, 0.0095, 0.0135, 0.0122, 0.0055, 0.0107, 0.0146,
         0.0070, 0.0203, 0.0160, 0.0122, 0.0147, 0.0234, 0.0211, 0.0135, 0.0058,
         0.0137, 0.0139, 0.0145, 0.0084, 0.0047, 0.0124, 0.0071, 0.0098, 0.0120,
         0.0092, 0.0151, 0.0124, 0.0066, 0.0116, 0.0098, 0.0187, 0.0112, 0.0062,
         0.0159, 0.0178, 0.0119, 0.0131, 0.0050, 0.0095]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0206, 0.0215, 0.0283, 0.0000, 0.0305, 0.0399, 0.0000, 0.0211, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0235, 0.0300,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0232, 0.0237, 0.0000, 0.0292, 0.0229, 0.0000, 0.0278, 0.0246, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0258, 0.0244, 0.0375, 0.0000, 0.0232, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0228, 0.0207, 0.0000, 0.0000, 0.0246,
         0.0000, 0.0343, 0.0270, 0.0207, 0.0248, 0.0395, 0.0356, 0.0228, 0.0000,
         0.0232, 0.0235, 0.0244, 0.0000, 0.0000, 0.0210, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0256, 0.0209, 0.0000, 0.0000, 0.0000, 0.0316, 0.0000, 0.0000,
         0.0269, 0.0301, 0.0000, 0.0221, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0121, 0.0117, 0.0093, 0.0120, 0.0258, 0.0116, 0.0092, 0.0070, 0.0168,
         0.0126, 0.0053, 0.0163, 0.0099, 0.0121, 0.0081, 0.0054, 0.0113, 0.0100,
         0.0180, 0.0115, 0.0066, 0.0082, 0.0112, 0.0188, 0.0106, 0.0128, 0.0044,
         0.0090, 0.0191, 0.0176, 0.0107, 0.0152, 0.0094, 0.0093, 0.0124, 0.0218,
         0.0154, 0.0161, 0.0107, 0.0137, 0.0092, 0.0050, 0.0151, 0.0069, 0.0057,
         0.0123, 0.0087, 0.0060, 0.0116, 0.0117, 0.0149, 0.0231, 0.0068, 0.0071,
         0.0121, 0.0148, 0.0041, 0.0086, 0.0157, 0.0106, 0.0080, 0.0051, 0.0097,
         0.0123, 0.0119, 0.0094, 0.0136, 0.0089, 0.0130, 0.0083, 0.0163, 0.0089,
         0.0100, 0.0133, 0.0136, 0.0136, 0.0075, 0.0104, 0.0099, 0.0122, 0.0088,
         0.0110, 0.0121, 0.0087, 0.0195, 0.0156, 0.0092]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0202, 0.0195, 0.0000, 0.0200, 0.0432, 0.0193, 0.0000, 0.0000, 0.0281,
         0.0210, 0.0000, 0.0272, 0.0000, 0.0202, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0301, 0.0000, 0.0000, 0.0000, 0.0000, 0.0314, 0.0000, 0.0213, 0.0000,
         0.0000, 0.0320, 0.0295, 0.0000, 0.0254, 0.0000, 0.0000, 0.0207, 0.0365,
         0.0256, 0.0269, 0.0000, 0.0230, 0.0000, 0.0000, 0.0253, 0.0000, 0.0000,
         0.0205, 0.0000, 0.0000, 0.0000, 0.0195, 0.0249, 0.0386, 0.0000, 0.0000,
         0.0203, 0.0248, 0.0000, 0.0000, 0.0263, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0205, 0.0199, 0.0000, 0.0227, 0.0000, 0.0218, 0.0000, 0.0273, 0.0000,
         0.0000, 0.0222, 0.0227, 0.0227, 0.0000, 0.0000, 0.0000, 0.0204, 0.0000,
         0.0000, 0.0202, 0.0000, 0.0325, 0.0261, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[0.0246, 0.0140, 0.0096, 0.0058, 0.0103, 0.0101, 0.0111, 0.0082, 0.0096,
         0.0042, 0.0166, 0.0209, 0.0081, 0.0092, 0.0074, 0.0110, 0.0123, 0.0173,
         0.0078, 0.0070, 0.0126, 0.0095, 0.0047, 0.0071, 0.0060, 0.0112, 0.0068,
         0.0096, 0.0160, 0.0062, 0.0106, 0.0115, 0.0066, 0.0116, 0.0156, 0.0143,
         0.0144, 0.0083, 0.0098, 0.0083, 0.0102, 0.0103, 0.0170, 0.0100, 0.0071,
         0.0095, 0.0070, 0.0127, 0.0091, 0.0144, 0.0103, 0.0165, 0.0085, 0.0108,
         0.0086, 0.0058, 0.0196, 0.0108, 0.0086, 0.0091, 0.0401, 0.0094, 0.0110,
         0.0115, 0.0142, 0.0126, 0.0086, 0.0102, 0.0170, 0.0112, 0.0122, 0.0119,
         0.0140, 0.0137, 0.0106, 0.0083, 0.0139, 0.0119, 0.0111, 0.0127, 0.0164,
         0.0134, 0.0218, 0.0148, 0.0091, 0.0066, 0.0104]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0.0417, 0.0237, 0.0000, 0.0000, 0.0000, 0.0000, 0.0188, 0.0000, 0.0000,
         0.0000, 0.0281, 0.0354, 0.0000, 0.0000, 0.0000, 0.0000, 0.0209, 0.0293,
         0.0000, 0.0000, 0.0214, 0.0000, 0.0000, 0.0000, 0.0000, 0.0190, 0.0000,
         0.0000, 0.0272, 0.0000, 0.0000, 0.0195, 0.0000, 0.0197, 0.0264, 0.0243,
         0.0244, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0288, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0215, 0.0000, 0.0244, 0.0000, 0.0280, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0333, 0.0000, 0.0000, 0.0000, 0.0680, 0.0000, 0.0186,
         0.0195, 0.0241, 0.0214, 0.0000, 0.0000, 0.0288, 0.0190, 0.0208, 0.0202,
         0.0237, 0.0232, 0.0000, 0.0000, 0.0237, 0.0202, 0.0188, 0.0216, 0.0279,
/opt/conda/conda-bld/pytorch_1728945370933/work/aten/src/ATen/native/cuda/TensorCompare.cu:110: _assert_async_cuda_kernel: block: [0,0,0], thread: [0,0,0] Assertion `probability tensor contains either `inf`, `nan` or element < 0` failed.
         0.0228, 0.0371, 0.0250, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Probabilities after softmax: tensor([[1.8766e-05, 2.1516e-05, 9.2165e-06, 9.7974e-07, 2.4156e-06, 2.2031e-06,
         2.0001e-04, 1.7167e-06, 7.6261e-06, 7.4244e-06, 4.1648e-05, 2.1581e-06,
         1.4911e-06, 8.5915e-06, 4.5896e-05, 8.6182e-06, 7.7598e-06, 1.2904e-05,
         1.1730e-05, 1.3772e-05, 1.4231e-05, 1.4272e-05, 5.5770e-06, 4.0820e-06,
         3.5176e-06, 7.5919e-06, 8.0074e-07, 1.5086e-04, 1.1014e-05, 3.6530e-04,
         1.9455e-04, 6.6245e-05, 1.2180e-04, 1.0730e-04, 2.1731e-04, 3.5788e-03,
         3.5486e-05, 2.8568e-05, 2.2433e-05, 5.1267e-05, 5.8252e-06, 4.7566e-05,
         5.4702e-05, 1.7741e-06, 4.6799e-05, 1.2760e-04, 5.6027e-05, 1.8791e-05,
         5.9184e-07, 7.3680e-06, 6.8270e-07, 7.4494e-06, 5.3056e-06, 1.6236e-06,
         4.6182e-07, 4.2123e-06, 5.5193e-02, 2.6699e-02, 3.3308e-04, 2.9855e-03,
         1.7648e-03, 1.3042e-02, 1.5231e-04, 3.4547e-02, 3.4362e-02, 2.9995e-04,
         9.6956e-06, 9.2334e-05, 1.8393e-03, 8.4677e-04, 2.8614e-01, 1.5581e-04,
         2.5727e-04, 3.6813e-04, 1.1626e-03, 4.7343e-01, 3.0635e-02, 1.4756e-04,
         2.4301e-02, 3.3290e-06, 5.3192e-03, 9.3646e-07, 5.9295e-05, 1.6504e-05,
         2.3628e-05, 3.3192e-06, 1.7323e-07]], device='cuda:0')
Sum of probabilities per row: tensor([1.], device='cuda:0')
Probabilities after top-p: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0')
Probabilities after softmax: tensor([[4.9688e-06, 4.3829e-06, 6.1268e-07, 3.8371e-07, 2.6596e-07, 1.0099e-06,
         3.2570e-06, 9.4975e-07, 1.7888e-06, 9.1676e-07, 1.3663e-06, 5.0203e-07,
         2.0702e-06, 3.3191e-06, 3.1845e-07, 3.3402e-07, 4.4741e-07, 7.6529e-07,
         7.4262e-07, 7.3524e-07, 6.0335e-07, 1.1047e-06, 3.3969e-07, 2.9676e-07,
         8.7643e-07, 7.1487e-07, 1.0261e-06, 5.7030e-06, 2.9222e-07, 6.7568e-07,
         8.2151e-07, 1.9188e-07, 8.5473e-07, 2.0658e-06, 3.7025e-06, 5.4205e-06,
         1.8494e-06, 1.3415e-07, 3.3602e-07, 4.4957e-07, 1.0179e-07, 3.5355e-05,
         2.3524e-06, 2.9985e-07, 1.2094e-06, 2.3464e-06, 1.0327e-06, 8.5748e-07,
         2.7539e-08, 2.9704e-06, 1.2032e-07, 4.8315e-07, 2.1704e-06, 6.2927e-07,
         1.1744e-07, 2.0805e-06, 2.5350e-04, 1.8678e-05, 6.4349e-06, 1.7051e-06,
         1.2841e-03, 1.2289e-05, 1.0270e-06, 5.3722e-02, 1.3133e-03, 2.5118e-06,
         8.4220e-07, 7.8258e-07, 5.4500e-06, 2.8423e-06, 9.3962e-01, 3.6004e-06,
         2.3663e-06, 1.1982e-04, 2.0388e-06, 9.9779e-05, 4.3673e-04, 1.9684e-06,
         2.9703e-03, 4.9702e-07, 2.8039e-06, 1.0420e-07, 3.0581e-06, 7.0140e-07,
         7.8456e-07, 1.6237e-07, 2.8692e-07]], device='cuda:0')
Sum of probabilities per row: tensor([1.0000], device='cuda:0')
Probabilities after top-p: tensor([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]],
       device='cuda:0')
Warning: NaN or Inf found in probabilities here
Probs with Nan: tensor([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]],
       device='cuda:0')
Traceback (most recent call last):
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 47, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 574, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 981, in _run
    results = self._run_stage()
              ^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 1025, in _run_stage
    self.fit_loop.run()
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/loops/fit_loop.py", line 205, in run
    self.advance()
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/loops/fit_loop.py", line 363, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 140, in run
    self.advance(data_fetcher)
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 250, in advance
    batch_output = self.automatic_optimization.run(trainer.optimizers[0], batch_idx, kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 190, in run
    self._optimizer_step(batch_idx, closure)
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 268, in _optimizer_step
    call._call_lightning_module_hook(
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 167, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/core/module.py", line 1306, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/core/optimizer.py", line 153, in step
    step_output = self._strategy.optimizer_step(self._optimizer, closure, **kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/strategies/strategy.py", line 238, in optimizer_step
    return self.precision_plugin.optimizer_step(optimizer, model=model, closure=closure, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/plugins/precision/precision.py", line 122, in optimizer_step
    return optimizer.step(closure=closure, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/torch/optim/lr_scheduler.py", line 137, in wrapper
    return func.__get__(opt, opt.__class__)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/torch/optim/optimizer.py", line 487, in wrapper
    out = func(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/torch/optim/optimizer.py", line 91, in _use_grad
    ret = func(self, *args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/torch/optim/adamw.py", line 197, in step
    loss = closure()
           ^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/plugins/precision/precision.py", line 108, in _wrap_closure
    closure_result = closure()
                     ^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 144, in __call__
    self._result = self.closure(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 129, in closure
    step_output = self._step_fn()
                  ^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 317, in _training_step
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 319, in _call_strategy_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/strategies/strategy.py", line 390, in training_step
    return self.lightning_module.training_step(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home6/scur2773/uvadlc_practicals_2024/assignment2/part2/train.py", line 55, in training_step
    generated_sents = self.generate()
                      ^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home6/scur2773/uvadlc_practicals_2024/assignment2/part2/train.py", line 120, in generate
    y = self.model.generate(x, n_steps, temperature=1.0, do_sample=do_sample, top_k=top_k, top_p=top_p)[0]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home6/scur2773/uvadlc_practicals_2024/assignment2/part2/gpt.py", line 537, in generate
    idx_next = torch.multinomial(probs, num_samples=1)  # (b, 1)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: CUDA error: device-side assert triggered
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/gpfs/home6/scur2773/uvadlc_practicals_2024/assignment2/part2/train.py", line 209, in <module>
    train(args=args)
  File "/gpfs/home6/scur2773/uvadlc_practicals_2024/assignment2/part2/train.py", line 202, in train
    trainer.fit(lightning_model)
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 538, in fit
    call._call_and_handle_interrupt(
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 68, in _call_and_handle_interrupt
    trainer._teardown()
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 1004, in _teardown
    self.strategy.teardown()
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/pytorch_lightning/strategies/strategy.py", line 531, in teardown
    _optimizers_to_device(self.optimizers, torch.device("cpu"))
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/lightning_fabric/utilities/optimizer.py", line 28, in _optimizers_to_device
    _optimizer_to_device(opt, device)
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/lightning_fabric/utilities/optimizer.py", line 42, in _optimizer_to_device
    v[key] = move_data_to_device(val, device)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/lightning_fabric/utilities/apply_func.py", line 110, in move_data_to_device
    return apply_to_collection(batch, dtype=_TransferableDataType, function=batch_to)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/lightning_utilities/core/apply_func.py", line 64, in apply_to_collection
    return function(data, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/lightning_fabric/utilities/apply_func.py", line 104, in batch_to
    data_output = data.to(device, **kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: CUDA error: device-side assert triggered
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.

srun: error: gcn70: task 0: Exited with exit code 1
srun: Terminating StepId=8834088.0

JOB STATISTICS
==============
Job ID: 8834088
Cluster: snellius
User/Group: scur2773/scur2773
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 18
CPU Utilized: 00:02:54
CPU Efficiency: 5.17% of 00:56:06 core-walltime
Job Wall-clock time: 00:03:07
Memory Utilized: 1.61 GB
Memory Efficiency: 1.34% of 120.00 GB
