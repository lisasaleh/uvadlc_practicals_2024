============================================================================================== 
Warning! Mixing Conda and module environments may lead to corruption of the
user environment. 
We do not recommend users mixing those two environments unless absolutely
necessary. Note that 
SURF does not provide any support for Conda environment.
For more information, please refer to our software policy page:
https://servicedesk.surf.nl/wiki/display/WIKI/Software+policy+Snellius#SoftwarepolicySnellius-UseofAnacondaandMinicondaenvironmentsonSnellius 

Remember that many packages have already been installed on the system and can
be loaded using 
the 'module load <package__name>' command. If you are uncertain if a package is
already available 
on the system, please use 'module avail' or 'module spider' to search for it.
============================================================================================== 
[rank: 0] Seed set to 0
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
You are using a CUDA device ('NVIDIA A100-SXM4-40GB MIG 3g.20gb') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [MIG-8bd44e3b-1799-5308-93bf-f2840019fcc5]
Namespace(txt_file='./assets/book_EN_grimms_fairy_tales.txt', model_type='gpt-mini', block_size=128, use_pretrained=False, abs_emb=False, train_batch_size=128, generate_batch_size=5, generate_every_n_steps=1000, learning_rate=0.0005, weight_decay=0.1, betas=(0.9, 0.95), num_epochs=5, clip_grad_norm=1.0, log_dir='./logs', seed=0, num_workers=8, progress_bar=False, use_flash_attn=False, precision='32', compile=True, pretrained_tokenizer=False, device='cuda')
data has 540241 characters, 87 unique.
True False
number of parameters: 10.73M
running on device cpu
Finding best initial lr:   0%|          | 0/100 [00:00<?, ?it/s]/home/scur2773/.conda/envs/dl2024/lib/python3.12/site-packages/torch/_inductor/compile_fx.py:167: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Finding best initial lr:   1%|          | 1/100 [00:24<39:48, 24.13s/it]Finding best initial lr:   2%|▏         | 2/100 [00:24<16:27, 10.07s/it]Finding best initial lr:   3%|▎         | 3/100 [00:24<09:01,  5.58s/it]Finding best initial lr:   4%|▍         | 4/100 [00:24<05:32,  3.47s/it]Finding best initial lr:   5%|▌         | 5/100 [00:25<03:38,  2.30s/it]Finding best initial lr:   6%|▌         | 6/100 [00:25<02:30,  1.60s/it]Finding best initial lr:   7%|▋         | 7/100 [00:25<01:46,  1.15s/it]Finding best initial lr:   8%|▊         | 8/100 [00:25<01:18,  1.17it/s]Finding best initial lr:   9%|▉         | 9/100 [00:25<01:00,  1.51it/s]Finding best initial lr:  10%|█         | 10/100 [00:26<00:47,  1.89it/s]Finding best initial lr:  11%|█         | 11/100 [00:26<00:38,  2.29it/s]Finding best initial lr:  12%|█▏        | 12/100 [00:26<00:32,  2.67it/s]Finding best initial lr:  13%|█▎        | 13/100 [00:26<00:28,  3.03it/s]Finding best initial lr:  14%|█▍        | 14/100 [00:27<00:25,  3.33it/s]Finding best initial lr:  15%|█▌        | 15/100 [00:27<00:23,  3.58it/s]Finding best initial lr:  16%|█▌        | 16/100 [00:27<00:22,  3.78it/s]Finding best initial lr:  17%|█▋        | 17/100 [00:27<00:21,  3.94it/s]Finding best initial lr:  18%|█▊        | 18/100 [00:28<00:20,  4.05it/s]Finding best initial lr:  19%|█▉        | 19/100 [00:28<00:19,  4.13it/s]Finding best initial lr:  20%|██        | 20/100 [00:28<00:19,  4.19it/s]Finding best initial lr:  21%|██        | 21/100 [00:28<00:18,  4.24it/s]Finding best initial lr:  22%|██▏       | 22/100 [00:28<00:18,  4.25it/s]Finding best initial lr:  23%|██▎       | 23/100 [00:29<00:18,  4.27it/s]Finding best initial lr:  24%|██▍       | 24/100 [00:29<00:17,  4.29it/s]Finding best initial lr:  25%|██▌       | 25/100 [00:29<00:17,  4.31it/s]Finding best initial lr:  26%|██▌       | 26/100 [00:29<00:17,  4.32it/s]Finding best initial lr:  27%|██▋       | 27/100 [00:30<00:16,  4.32it/s]Finding best initial lr:  28%|██▊       | 28/100 [00:30<00:16,  4.33it/s]Finding best initial lr:  29%|██▉       | 29/100 [00:30<00:16,  4.33it/s]Finding best initial lr:  30%|███       | 30/100 [00:30<00:16,  4.34it/s]Finding best initial lr:  31%|███       | 31/100 [00:31<00:15,  4.34it/s]Finding best initial lr:  32%|███▏      | 32/100 [00:31<00:15,  4.34it/s]Finding best initial lr:  33%|███▎      | 33/100 [00:31<00:15,  4.34it/s]Finding best initial lr:  34%|███▍      | 34/100 [00:31<00:15,  4.34it/s]Finding best initial lr:  35%|███▌      | 35/100 [00:31<00:15,  4.33it/s]Finding best initial lr:  36%|███▌      | 36/100 [00:32<00:14,  4.32it/s]Finding best initial lr:  37%|███▋      | 37/100 [00:32<00:14,  4.32it/s]Finding best initial lr:  38%|███▊      | 38/100 [00:32<00:14,  4.33it/s]Finding best initial lr:  39%|███▉      | 39/100 [00:32<00:14,  4.33it/s]Finding best initial lr:  40%|████      | 40/100 [00:33<00:13,  4.33it/s]Finding best initial lr:  41%|████      | 41/100 [00:33<00:13,  4.34it/s]Finding best initial lr:  42%|████▏     | 42/100 [00:33<00:13,  4.34it/s]Finding best initial lr:  43%|████▎     | 43/100 [00:33<00:13,  4.34it/s]Finding best initial lr:  44%|████▍     | 44/100 [00:34<00:12,  4.34it/s]Finding best initial lr:  45%|████▌     | 45/100 [00:34<00:12,  4.34it/s]Finding best initial lr:  46%|████▌     | 46/100 [00:34<00:12,  4.34it/s]Finding best initial lr:  47%|████▋     | 47/100 [00:34<00:12,  4.34it/s]Finding best initial lr:  48%|████▊     | 48/100 [00:34<00:11,  4.34it/s]Finding best initial lr:  49%|████▉     | 49/100 [00:35<00:11,  4.34it/s]Finding best initial lr:  50%|█████     | 50/100 [00:35<00:11,  4.34it/s]Finding best initial lr:  51%|█████     | 51/100 [00:35<00:11,  4.34it/s]Finding best initial lr:  52%|█████▏    | 52/100 [00:35<00:11,  4.34it/s]Finding best initial lr:  53%|█████▎    | 53/100 [00:36<00:10,  4.34it/s]Finding best initial lr:  54%|█████▍    | 54/100 [00:36<00:10,  4.34it/s]Finding best initial lr:  55%|█████▌    | 55/100 [00:36<00:10,  4.34it/s]Finding best initial lr:  56%|█████▌    | 56/100 [00:36<00:10,  4.34it/s]Finding best initial lr:  57%|█████▋    | 57/100 [00:37<00:09,  4.34it/s]Finding best initial lr:  58%|█████▊    | 58/100 [00:37<00:09,  4.34it/s]Finding best initial lr:  59%|█████▉    | 59/100 [00:37<00:09,  4.34it/s]Finding best initial lr:  60%|██████    | 60/100 [00:37<00:09,  4.34it/s]Finding best initial lr:  61%|██████    | 61/100 [00:37<00:08,  4.34it/s]Finding best initial lr:  62%|██████▏   | 62/100 [00:38<00:08,  4.34it/s]Finding best initial lr:  63%|██████▎   | 63/100 [00:38<00:08,  4.34it/s]Finding best initial lr:  64%|██████▍   | 64/100 [00:38<00:08,  4.34it/s]Finding best initial lr:  65%|██████▌   | 65/100 [00:38<00:08,  4.34it/s]Finding best initial lr:  66%|██████▌   | 66/100 [00:39<00:07,  4.34it/s]Finding best initial lr:  67%|██████▋   | 67/100 [00:39<00:07,  4.34it/s]Finding best initial lr:  68%|██████▊   | 68/100 [00:39<00:07,  4.34it/s]Finding best initial lr:  69%|██████▉   | 69/100 [00:39<00:07,  4.34it/s]Finding best initial lr:  70%|███████   | 70/100 [00:40<00:06,  4.34it/s]Finding best initial lr:  71%|███████   | 71/100 [00:40<00:06,  4.34it/s]Finding best initial lr:  72%|███████▏  | 72/100 [00:40<00:06,  4.34it/s]Finding best initial lr:  73%|███████▎  | 73/100 [00:40<00:06,  4.34it/s]Finding best initial lr:  74%|███████▍  | 74/100 [00:40<00:05,  4.34it/s]Finding best initial lr:  75%|███████▌  | 75/100 [00:41<00:05,  4.34it/s]Finding best initial lr:  76%|███████▌  | 76/100 [00:41<00:05,  4.34it/s]Finding best initial lr:  77%|███████▋  | 77/100 [00:41<00:05,  4.34it/s]Finding best initial lr:  78%|███████▊  | 78/100 [00:41<00:05,  4.34it/s]Finding best initial lr:  79%|███████▉  | 79/100 [00:42<00:04,  4.33it/s]Finding best initial lr:  80%|████████  | 80/100 [00:42<00:04,  4.33it/s]Finding best initial lr:  81%|████████  | 81/100 [00:42<00:04,  4.33it/s]Finding best initial lr:  82%|████████▏ | 82/100 [00:42<00:04,  4.33it/s]Finding best initial lr:  83%|████████▎ | 83/100 [00:43<00:03,  4.34it/s]Finding best initial lr:  84%|████████▍ | 84/100 [00:43<00:03,  4.34it/s]Finding best initial lr:  85%|████████▌ | 85/100 [00:43<00:03,  4.34it/s]Finding best initial lr:  86%|████████▌ | 86/100 [00:43<00:03,  4.34it/s]Fi